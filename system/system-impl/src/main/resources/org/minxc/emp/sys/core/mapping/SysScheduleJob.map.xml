<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="org.minxc.emp.system.impl.dao.SysScheduleJobDao">

	<resultMap id="SysScheduleJob"
		type="org.minxc.emp.system.impl.model.SystemScheduleJobEntity">
		<id column="ID" jdbcType="VARCHAR" property="id" />
		<result column="NAME" jdbcType="VARCHAR" property="name" />
		<result column="CATEGORY" jdbcType="VARCHAR"
			property="category" />
		<result column="DESCRIPTION" jdbcType="VARCHAR"
			property="description" />
		<result column="INVOKE_TARGET" jdbcType="VARCHAR"
			property="invokeTarget" />
		<result column="CRON_EXPRESSION" jdbcType="VARCHAR"
			property="cronExpression" />
		<result column="RUNNING_STATE" jdbcType="VARCHAR"
			property="runningState" />
		<result column="IS_CONCURRENT" jdbcType="DECIMAL"
			property="isConcurrent" />
		<result column="CREATE_BY" jdbcType="VARCHAR"
			property="createBy" />
		<result column="CREATE_TIME" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="UPDATE_BY" jdbcType="VARCHAR"
			property="updateBy" />
		<result column="UPDATE_TIME" jdbcType="TIMESTAMP"
			property="updateTime" />
		<result column="IS_DELETE" jdbcType="DECIMAL"
			property="isDelete" />
	</resultMap>

	<sql id="Base_Column_List">
		ID, NAME, CATEGORY, DESCRIPTION, INVOKE_TARGET,
		CRON_EXPRESSION,
		RUNNING_STATE, IS_CONCURRENT,
		CREATE_BY, CREATE_TIME,
		UPDATE_BY, UPDATE_TIME, IS_DELETE
	</sql>

	<insert id="create"
		parameterType="org.minxc.emp.system.impl.model.SystemScheduleJobEntity">
		insert into YMMG_SCHEDULE_JOB (ID, NAME, CATEGORY,
		DESCRIPTION, INVOKE_TARGET, CRON_EXPRESSION,
		RUNNING_STATE,
		IS_CONCURRENT, CREATE_BY,
		CREATE_TIME, UPDATE_BY, UPDATE_TIME,
		IS_DELETE)
		values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
		#{category,jdbcType=VARCHAR},
		#{description,jdbcType=VARCHAR},
		#{invokeTarget,jdbcType=VARCHAR}, #{cronExpression,jdbcType=VARCHAR},
		#{runningState,jdbcType=VARCHAR}, #{isConcurrent,jdbcType=DECIMAL},
		#{createBy,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP},
		#{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP},
		#{isDelete,jdbcType=DECIMAL})
	</insert>

	<update id="update"
		parameterType="org.minxc.emp.system.impl.model.SystemScheduleJobEntity">
		update YMMG_SCHEDULE_JOB
		set NAME = #{name,jdbcType=VARCHAR},
		CATEGORY = #{category,jdbcType=VARCHAR},
		DESCRIPTION = #{description,jdbcType=VARCHAR},
		INVOKE_TARGET = #{invokeTarget,jdbcType=VARCHAR},
		CRON_EXPRESSION = #{cronExpression,jdbcType=VARCHAR},
		RUNNING_STATE = #{runningState,jdbcType=VARCHAR},
		IS_CONCURRENT = #{isConcurrent,jdbcType=DECIMAL},
		CREATE_BY = #{createBy,jdbcType=VARCHAR},
		CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
		UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
		UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
		IS_DELETE = #{isDelete,jdbcType=DECIMAL}
		where ID = #{id,jdbcType=VARCHAR}
	</update>

	<delete id="remove" parameterType="string">
		DELETE FROM YMMG_SCHEDULE_JOB
		WHERE ID = #{id,jdbcType=VARCHAR}
	</delete>

	<select id="get" resultMap="SysScheduleJob">
		select
		<include refid="Base_Column_List" />
		from YMMG_SCHEDULE_JOB
		where ID = #{id,jdbcType=VARCHAR}
	</select>

	<delete id="removeByIds">
		DELETE FROM YMMG_SCHEDULE_JOB WHERE ID IN
		<foreach collection="ids" item="id" open="(" separator=","
			close=")">
			#{id,jdbcType=VARCHAR}
		</foreach>
	</delete>

	<select id="query" resultMap="SysScheduleJob">
		SELECT
		<include refid="Base_Column_List" />
		FROM
		YMMG_SCHEDULE_JOB
		<where>
			<if test="whereSql!=null">
				${whereSql}
			</if>
		</where>
		<if test="orderBySql!=null">
			ORDER BY ${orderBySql}
		</if>
		<if test="orderBySql==null">
			ORDER BY ID DESC
		</if>
	</select>

	<select id="getAll" resultMap="SysScheduleJob">
		SELECT
		<include refid="Base_Column_List" />
		FROM
		YMMG_SCHEDULE_JOB
	</select>

	
	
	<!-- 需要调整的语句 TODO:需要调整的语句 -->
	<select id="exists" resultType="boolean">
		SELECT
		IF(COUNT(*) > 0, TRUE,
		FALSE) AS `exists`
		FROM
		YMMG_SCHEDULE_JOB
		WHERE
		name_ =
		#{jobName,jdbcType=VARCHAR} AND group_ =
		#{jobGroup,jdbcType=VARCHAR}
	</select>
</mapper>