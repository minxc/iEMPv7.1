CREATE TABLE YMYX_BPM_BIZ_LINK (
ID VARCHAR2(64) NOT NULL,
DEF_ID VARCHAR2(64) DEFAULT NULL NULL,
INST_ID VARCHAR2(64) DEFAULT NULL NULL,
BIZ_ID VARCHAR2(64) DEFAULT NULL NULL,
BIZ_CODE VARCHAR2(64) NOT NULL,
PRIMARY KEY (ID, BIZ_CODE)
);
COMMENT ON TABLE YMYX_BPM_BIZ_LINK IS '流程实例与业务数据关系表';
COMMENT ON COLUMN YMYX_BPM_BIZ_LINK.ID IS '主键';
COMMENT ON COLUMN YMYX_BPM_BIZ_LINK.DEF_ID IS '流程定义ID';
COMMENT ON COLUMN YMYX_BPM_BIZ_LINK.INST_ID IS '流程实例ID';
COMMENT ON COLUMN YMYX_BPM_BIZ_LINK.BIZ_ID IS '业务主键';
COMMENT ON COLUMN YMYX_BPM_BIZ_LINK.BIZ_CODE IS 'BO_CODE';

CREATE TABLE YMYX_BPM_DEFINITION (
ID VARCHAR2(64) NOT NULL,
NAME VARCHAR2(64) NOT NULL,
KEY VARCHAR2(64) NOT NULL,
DESCRIPTION VARCHAR2(1024) DEFAULT NULL NULL,
TYPE_ID VARCHAR2(64) DEFAULT NULL NULL,
STATUS VARCHAR2(40) DEFAULT NULL NULL,
ACT_DEF_ID VARCHAR2(64) DEFAULT NULL NULL,
ACT_MODEL_ID VARCHAR2(64) DEFAULT NULL NULL,
ACT_DEPLOY_ID VARCHAR2(64) DEFAULT NULL NULL,
VERSION NUMBER(11,0) DEFAULT NULL NULL,
MAIN_DEF_ID VARCHAR2(64) DEFAULT NULL NULL,
IS_MAIN CHAR(1) DEFAULT NULL NULL,
CREATE_BY VARCHAR2(64) DEFAULT NULL NULL,
CREATE_TIME DATE DEFAULT NULL NULL,
CREATE_ORG_ID VARCHAR2(64) DEFAULT NULL NULL,
UPDATE_BY VARCHAR2(64) DEFAULT NULL NULL,
UPDATE_TIME DATE DEFAULT NULL NULL,
SUPPORT_MOBILE NUMBER(11,0) DEFAULT 0 NULL,
DEF_SETTING CLOB DEFAULT NULL NULL,
REV NUMBER(11,0) DEFAULT NULL NULL,
PRIMARY KEY (ID)
);
CREATE INDEX BPM_PROCESS_DEF_KEY ON YMYX_BPM_DEFINITION (KEY);
COMMENT ON TABLE YMYX_BPM_DEFINITION IS '流程定义';
COMMENT ON COLUMN YMYX_BPM_DEFINITION.ID IS '流程定义ID';
COMMENT ON COLUMN YMYX_BPM_DEFINITION.NAME IS '流程名称';
COMMENT ON COLUMN YMYX_BPM_DEFINITION.KEY IS '流程业务主键';
COMMENT ON COLUMN YMYX_BPM_DEFINITION.DESCRIPTION IS '流程描述';
COMMENT ON COLUMN YMYX_BPM_DEFINITION.TYPE_ID IS '所属分类ID';
COMMENT ON COLUMN YMYX_BPM_DEFINITION.STATUS IS '流程状态。草稿、发布、禁用';
COMMENT ON COLUMN YMYX_BPM_DEFINITION.ACT_DEF_ID IS 'BPMN - 流程定义ID';
COMMENT ON COLUMN YMYX_BPM_DEFINITION.ACT_DEPLOY_ID IS 'BPMN - 流程发布ID';
COMMENT ON COLUMN YMYX_BPM_DEFINITION.VERSION IS '版本 - 当前版本号';
COMMENT ON COLUMN YMYX_BPM_DEFINITION.MAIN_DEF_ID IS '版本 - 主版本流程ID';
COMMENT ON COLUMN YMYX_BPM_DEFINITION.IS_MAIN IS '版本 - 是否主版本';
COMMENT ON COLUMN YMYX_BPM_DEFINITION.CREATE_BY IS '创建人ID';
COMMENT ON COLUMN YMYX_BPM_DEFINITION.CREATE_TIME IS '创建时间';
COMMENT ON COLUMN YMYX_BPM_DEFINITION.CREATE_ORG_ID IS '创建者所属组织ID';
COMMENT ON COLUMN YMYX_BPM_DEFINITION.UPDATE_BY IS '更新人ID';
COMMENT ON COLUMN YMYX_BPM_DEFINITION.UPDATE_TIME IS '更新时间';

CREATE TABLE YMYX_BPM_INSTANCE (
ID VARCHAR2(64) NOT NULL,
SUBJECT VARCHAR2(128) NOT NULL,
DEF_ID VARCHAR2(64) NOT NULL,
ACT_DEF_ID VARCHAR2(64) DEFAULT NULL NULL,
DEF_KEY VARCHAR2(128) DEFAULT NULL NULL,
DEF_NAME VARCHAR2(128) NOT NULL,
BIZ_KEY VARCHAR2(64) DEFAULT NULL NULL,
STATUS VARCHAR2(40) DEFAULT NULL NULL,
END_TIME DATE DEFAULT NULL NULL,
DURATION NUMBER(20,0) DEFAULT NULL NULL,
TYPE_ID VARCHAR2(64) DEFAULT NULL NULL,
ACT_INST_ID VARCHAR2(64) DEFAULT NULL NULL,
CREATE_BY VARCHAR2(64) DEFAULT NULL NULL,
CREATOR VARCHAR2(64) DEFAULT NULL NULL,
CREATE_TIME DATE DEFAULT NULL NULL,
CREATE_ORG_ID VARCHAR2(64) DEFAULT NULL NULL,
UPDATE_BY VARCHAR2(64) DEFAULT NULL NULL,
UPDATE_TIME DATE DEFAULT NULL NULL,
IS_FORMMAL CHAR(1 ) NOT NULL,
PARENT_INST_ID VARCHAR2(64) DEFAULT NULL NULL,
IS_FORBIDDEN NUMBER(6,0) DEFAULT NULL NULL,
DATA_MODE VARCHAR2(20) DEFAULT NULL NULL,
SUPPORT_MOBILE NUMBER(11,0) DEFAULT 0 NULL,
SUPER_NODE_ID VARCHAR2(50) DEFAULT NULL NULL,
PRIMARY KEY (ID)
);
CREATE INDEX IDX_PROINST_BPMINSTID ON YMYX_BPM_INSTANCE (ACT_INST_ID);
CREATE INDEX IDX_PROINST_PARENTID ON YMYX_BPM_INSTANCE (PARENT_INST_ID);
CREATE INDEX IDX_PROINST_BIZKEY ON YMYX_BPM_INSTANCE (BIZ_KEY);
COMMENT ON TABLE YMYX_BPM_INSTANCE IS '流程实例';
COMMENT ON COLUMN YMYX_BPM_INSTANCE.ID IS '流程实例ID';
COMMENT ON COLUMN YMYX_BPM_INSTANCE.SUBJECT IS '流程实例标题';
COMMENT ON COLUMN YMYX_BPM_INSTANCE.DEF_ID IS '流程定义ID';
COMMENT ON COLUMN YMYX_BPM_INSTANCE.ACT_DEF_ID IS 'BPMN流程定义ID';
COMMENT ON COLUMN YMYX_BPM_INSTANCE.DEF_KEY IS '流程定义KEY';
COMMENT ON COLUMN YMYX_BPM_INSTANCE.DEF_NAME IS '流程名称';
COMMENT ON COLUMN YMYX_BPM_INSTANCE.BIZ_KEY IS '关联数据业务主键';
COMMENT ON COLUMN YMYX_BPM_INSTANCE.STATUS IS '实例状态';
COMMENT ON COLUMN YMYX_BPM_INSTANCE.END_TIME IS '实例结束时间';
COMMENT ON COLUMN YMYX_BPM_INSTANCE.DURATION IS '持续时间(MS)';
COMMENT ON COLUMN YMYX_BPM_INSTANCE.TYPE_ID IS '所属分类ID';
COMMENT ON COLUMN YMYX_BPM_INSTANCE.ACT_INST_ID IS 'BPMN流程实例ID';
COMMENT ON COLUMN YMYX_BPM_INSTANCE.CREATE_BY IS '创建人ID';
COMMENT ON COLUMN YMYX_BPM_INSTANCE.CREATOR IS '创建人';
COMMENT ON COLUMN YMYX_BPM_INSTANCE.CREATE_TIME IS '创建时间';
COMMENT ON COLUMN YMYX_BPM_INSTANCE.CREATE_ORG_ID IS '创建者所属组织ID';
COMMENT ON COLUMN YMYX_BPM_INSTANCE.UPDATE_BY IS '更新人ID';
COMMENT ON COLUMN YMYX_BPM_INSTANCE.UPDATE_TIME IS '更新时间';
COMMENT ON COLUMN YMYX_BPM_INSTANCE.IS_FORMMAL IS '是否正式数据';
COMMENT ON COLUMN YMYX_BPM_INSTANCE.PARENT_INST_ID IS '父实例ID';
COMMENT ON COLUMN YMYX_BPM_INSTANCE.IS_FORBIDDEN IS '禁止';
COMMENT ON COLUMN YMYX_BPM_INSTANCE.SUPER_NODE_ID IS '父流程定义节点ID';

CREATE TABLE YMYX_BPM_REMINDER_HISTORY (
ID VARCHAR2(64) NOT NULL,
INST_ID VARCHAR2(255) DEFAULT NULL NULL,
INST_NAME VARCHAR2(255) DEFAULT NULL NULL,
NODE_NAME VARCHAR2(255) DEFAULT NULL NULL,
NODE_ID VARCHAR2(255) DEFAULT NULL NULL,
EXECUTE_DATE VARCHAR2(255) DEFAULT NULL NULL,
REMIND_TYPE VARCHAR2(255) DEFAULT NULL NULL,
USER_ID VARCHAR2(255) DEFAULT NULL NULL,
NOTE VARCHAR2(255) DEFAULT NULL NULL,
PRIMARY KEY (ID)
);

CREATE TABLE YMYX_BPM_TASK (
ID VARCHAR2(64) NOT NULL,
NAME VARCHAR2(64) NOT NULL,
SUBJECT VARCHAR2(128) NOT NULL,
INST_ID VARCHAR2(64) NOT NULL,
TASK_ID VARCHAR2(64) DEFAULT NULL NULL,
ACT_INST_ID VARCHAR2(64) DEFAULT NULL NULL,
ACT_EXECUTION_ID VARCHAR2(64) DEFAULT NULL NULL,
NODE_ID VARCHAR2(64) DEFAULT NULL NULL,
DEF_ID VARCHAR2(64) NOT NULL,
ASSIGNEE_ID VARCHAR2(64) DEFAULT NULL NULL,
ASSIGNEE_NAMES VARCHAR2(500) DEFAULT NULL NULL,
STATUS VARCHAR2(64) NOT NULL,
PRIORITY NUMBER(11,0) DEFAULT NULL NULL,
DUE_TIME DATE DEFAULT NULL NULL,
TASK_TYPE VARCHAR2(64) DEFAULT NULL NULL,
PARENT_ID VARCHAR2(64) DEFAULT NULL NULL,
TYPE_ID VARCHAR2(64) DEFAULT NULL NULL,
CREATE_TIME DATE NOT NULL,
CREATE_BY VARCHAR2(64) DEFAULT NULL NULL,
SUPPORT_MOBILE NUMBER(11,0) DEFAULT 0 NULL,
BACK_NODE VARCHAR2(64) DEFAULT NULL NULL,
PRIMARY KEY (ID)
);
CREATE INDEX IDX_BPMTASK_INSTID ON YMYX_BPM_TASK (INST_ID);
CREATE INDEX IDX_BPMTASK_TASKID ON YMYX_BPM_TASK (TASK_ID);
CREATE INDEX IDX_BPMTASK_PARENTID ON YMYX_BPM_TASK (PARENT_ID);
CREATE INDEX IDX_BPMTASK_USERID ON YMYX_BPM_TASK (ASSIGNEE_ID);
COMMENT ON TABLE YMYX_BPM_TASK IS '流程任务';
COMMENT ON COLUMN YMYX_BPM_TASK.ID IS '任务ID';
COMMENT ON COLUMN YMYX_BPM_TASK.NAME IS '任务名称';
COMMENT ON COLUMN YMYX_BPM_TASK.SUBJECT IS '待办事项标题';
COMMENT ON COLUMN YMYX_BPM_TASK.INST_ID IS '关联 - 流程实例ID';
COMMENT ON COLUMN YMYX_BPM_TASK.TASK_ID IS '关联的任务ID';
COMMENT ON COLUMN YMYX_BPM_TASK.ACT_INST_ID IS 'ACTIVITI 实例ID';
COMMENT ON COLUMN YMYX_BPM_TASK.ACT_EXECUTION_ID IS 'ACTIVITI 执行ID';
COMMENT ON COLUMN YMYX_BPM_TASK.NODE_ID IS '关联 - 任务节点ID';
COMMENT ON COLUMN YMYX_BPM_TASK.DEF_ID IS '关联 - 流程定义ID';
COMMENT ON COLUMN YMYX_BPM_TASK.ASSIGNEE_ID IS '任务执行人ID';
COMMENT ON COLUMN YMYX_BPM_TASK.STATUS IS '任务状态';
COMMENT ON COLUMN YMYX_BPM_TASK.PRIORITY IS '任务优先级';
COMMENT ON COLUMN YMYX_BPM_TASK.DUE_TIME IS '任务到期时间';
COMMENT ON COLUMN YMYX_BPM_TASK.TASK_TYPE IS '任务类型';
COMMENT ON COLUMN YMYX_BPM_TASK.PARENT_ID IS '父任务ID';
COMMENT ON COLUMN YMYX_BPM_TASK.TYPE_ID IS '分类ID';
COMMENT ON COLUMN YMYX_BPM_TASK.CREATE_TIME IS '任务创建时间';
COMMENT ON COLUMN YMYX_BPM_TASK.BACK_NODE IS '返回节点';

CREATE TABLE YMYX_BPM_TASK_IDENTITYLINK (
ID VARCHAR2(64) NOT NULL,
TASK_ID VARCHAR2(64) DEFAULT NULL NULL,
INST_ID VARCHAR2(64) DEFAULT NULL NULL,
TYPE VARCHAR2(20) DEFAULT NULL NULL,
IDENTITY_NAME VARCHAR2(64) DEFAULT NULL NULL,
IDENTITY_ID VARCHAR2(20) DEFAULT NULL NULL,
PERMISSION_CODE VARCHAR2(64) DEFAULT NULL NULL,
PRIMARY KEY (ID)
);
CREATE INDEX IDX_TASKCANDIDATE_TASKID ON YMYX_BPM_TASK_IDENTITYLINK (TASK_ID);
CREATE INDEX IDX_CANDIDATE_INSTID ON YMYX_BPM_TASK_IDENTITYLINK (INST_ID);
CREATE INDEX IDX_PERMISSION_CODE__COPY_1 ON YMYX_BPM_TASK_IDENTITYLINK (PERMISSION_CODE);
COMMENT ON TABLE YMYX_BPM_TASK_IDENTITYLINK IS '任务候选人';
COMMENT ON COLUMN YMYX_BPM_TASK_IDENTITYLINK.ID IS '主键';
COMMENT ON COLUMN YMYX_BPM_TASK_IDENTITYLINK.TASK_ID IS '任务ID';
COMMENT ON COLUMN YMYX_BPM_TASK_IDENTITYLINK.TYPE IS '候选人类型';
COMMENT ON COLUMN YMYX_BPM_TASK_IDENTITYLINK.IDENTITY_NAME IS '名字';
COMMENT ON COLUMN YMYX_BPM_TASK_IDENTITYLINK.IDENTITY_ID IS 'ID';

CREATE TABLE YMYX_BPM_TASK_OPINION (
ID VARCHAR2(64) NOT NULL,
INST_ID VARCHAR2(64) NOT NULL,
SUP_INST_ID VARCHAR2(64) DEFAULT NULL NULL,
TASK_ID VARCHAR2(64) DEFAULT NULL NULL,
TASK_KEY VARCHAR2(64) DEFAULT NULL NULL,
TASK_NAME VARCHAR2(255) DEFAULT NULL NULL,
TOKEN VARCHAR2(64) DEFAULT NULL NULL,
ASSIGN_INFO VARCHAR2(2000) DEFAULT NULL NULL,
APPROVER VARCHAR2(64) DEFAULT NULL NULL,
APPROVER_NAME VARCHAR2(64) DEFAULT NULL NULL,
APPROVE_TIME DATE DEFAULT NULL NULL,
OPINION VARCHAR2(2000) DEFAULT NULL NULL,
STATUS VARCHAR2(64) NOT NULL,
FORM_ID VARCHAR2(64) DEFAULT NULL NULL,
CREATE_BY VARCHAR2(255) DEFAULT NULL NULL,
CREATE_TIME DATE DEFAULT NULL NULL,
DURATION NUMBER(20,0) DEFAULT NULL NULL,
PRIMARY KEY (ID)
);
CREATE INDEX IDX_OPINION_SUPINSTID ON YMYX_BPM_TASK_OPINION (SUP_INST_ID);
CREATE INDEX IDX_OPINION_TASK ON YMYX_BPM_TASK_OPINION (TASK_ID);
CREATE INDEX IDX_OPINION_INSTID ON YMYX_BPM_TASK_OPINION (INST_ID);
COMMENT ON TABLE YMYX_BPM_TASK_OPINION IS '流程任务审批记录';
COMMENT ON COLUMN YMYX_BPM_TASK_OPINION.ID IS '意见ID';
COMMENT ON COLUMN YMYX_BPM_TASK_OPINION.INST_ID IS '流程实例ID';
COMMENT ON COLUMN YMYX_BPM_TASK_OPINION.SUP_INST_ID IS '父流程实例ID';
COMMENT ON COLUMN YMYX_BPM_TASK_OPINION.TASK_ID IS '任务ID';
COMMENT ON COLUMN YMYX_BPM_TASK_OPINION.TASK_KEY IS '任务定义KEY';
COMMENT ON COLUMN YMYX_BPM_TASK_OPINION.TASK_NAME IS '任务名称';
COMMENT ON COLUMN YMYX_BPM_TASK_OPINION.TOKEN IS '任务令牌';
COMMENT ON COLUMN YMYX_BPM_TASK_OPINION.ASSIGN_INFO IS '任务分配情况';
COMMENT ON COLUMN YMYX_BPM_TASK_OPINION.APPROVER IS '审批人';
COMMENT ON COLUMN YMYX_BPM_TASK_OPINION.APPROVER_NAME IS '审批人名字';
COMMENT ON COLUMN YMYX_BPM_TASK_OPINION.APPROVE_TIME IS '审批时间';
COMMENT ON COLUMN YMYX_BPM_TASK_OPINION.OPINION IS '审批意见';
COMMENT ON COLUMN YMYX_BPM_TASK_OPINION.STATUS IS '审批状态,START=发起流程;AWAITING_CHECK=待审批;AGREE=同意;AGAINST=反对;RETURN=驳回;ABANDON=弃权;RETRIEVE=追回';
COMMENT ON COLUMN YMYX_BPM_TASK_OPINION.FORM_ID IS '表单定义ID';
COMMENT ON COLUMN YMYX_BPM_TASK_OPINION.CREATE_TIME IS '执行开始时间';
COMMENT ON COLUMN YMYX_BPM_TASK_OPINION.DURATION IS '持续时间(MS)';

CREATE TABLE YMYX_BPM_TASK_REMINDER (
ID VARCHAR2(64) NOT NULL,
TASK_ID VARCHAR2(64) DEFAULT NULL NULL,
NAME VARCHAR2(64) DEFAULT NULL NULL,
REL_DATE VARCHAR2(64) DEFAULT NULL NULL,
DUE_ACTION VARCHAR2(64) DEFAULT NULL NULL,
DUE_SCRIPT VARCHAR2(255) DEFAULT NULL NULL,
DUE_DATE DATE DEFAULT NULL NULL,
IS_SEND_MSG NUMBER(11,0) DEFAULT NULL NULL,
MSG_SEND_DATE DATE DEFAULT NULL NULL,
MSG_INTERVAL NUMBER(11,0) DEFAULT NULL NULL,
MSG_COUNT NUMBER(11,0) DEFAULT NULL NULL,
MSG_TYPE VARCHAR2(64) DEFAULT NULL NULL,
HTML_MSG VARCHAR2(255) DEFAULT NULL NULL,
PLAIN_MSG VARCHAR2(255) DEFAULT NULL NULL,
WARNINGSET VARCHAR2(255) DEFAULT NULL NULL,
TRIGGER_DATE DATE DEFAULT NULL NULL,
PRIMARY KEY (ID)
);
CREATE TABLE YMYX_BPM_TASK_STACK (
ID VARCHAR2(64) NOT NULL,
TASK_ID VARCHAR2(255) DEFAULT NULL NULL,
INST_ID VARCHAR2(64) DEFAULT NULL NULL,
PARENT_ID VARCHAR2(64) DEFAULT NULL NULL,
NODE_ID VARCHAR2(64) NOT NULL,
NODE_NAME VARCHAR2(125) DEFAULT NULL NULL,
START_TIME DATE DEFAULT NULL NULL,
END_TIME DATE DEFAULT NULL NULL,
IS_MULITI_TASK NUMBER(6,0) DEFAULT NULL NULL,
PATH VARCHAR2(512) DEFAULT NULL NULL,
PRIMARY KEY (ID)
) ;
CREATE INDEX IDX_EXESTACK_INSTID ON YMYX_BPM_TASK_STACK (INST_ID);
COMMENT ON TABLE YMYX_BPM_TASK_STACK IS '流程执行堆栈树';
COMMENT ON COLUMN YMYX_BPM_TASK_STACK.ID IS '主键';
COMMENT ON COLUMN YMYX_BPM_TASK_STACK.TASK_ID IS '任务ID';
COMMENT ON COLUMN YMYX_BPM_TASK_STACK.INST_ID IS '流程实例ID';
COMMENT ON COLUMN YMYX_BPM_TASK_STACK.PARENT_ID IS '父ID';
COMMENT ON COLUMN YMYX_BPM_TASK_STACK.NODE_ID IS '节点ID';
COMMENT ON COLUMN YMYX_BPM_TASK_STACK.START_TIME IS '开始时间';
COMMENT ON COLUMN YMYX_BPM_TASK_STACK.END_TIME IS '结束时间';
COMMENT ON COLUMN YMYX_BPM_TASK_STACK.IS_MULITI_TASK IS '1=是;0=否';
COMMENT ON COLUMN YMYX_BPM_TASK_STACK.PATH IS '路径';

CREATE TABLE YMYX_BIZ_COLUMN (
ID VARCHAR2(64) NOT NULL,
TABLE_ID VARCHAR2(64) DEFAULT NULL NULL,
KEY VARCHAR2(64) DEFAULT NULL NULL,
NAME VARCHAR2(64) DEFAULT NULL NULL,
TYPE VARCHAR2(64) DEFAULT NULL NULL,
LENGTH NUMBER(11,0) DEFAULT NULL NULL,
IS_DECIMAL NUMBER(11,0) DEFAULT NULL NULL,
REQUIRED NUMBER(4,0) DEFAULT NULL NULL,
IS_PRIMARY NUMBER(4,0) DEFAULT NULL NULL,
DEFAULT_VALUE VARCHAR2(128) DEFAULT NULL NULL,
COMMENTS VARCHAR2(256) DEFAULT NULL NULL,
PRIMARY KEY (ID)
);
COMMENT ON TABLE YMYX_BIZ_COLUMN IS '业务字段表';
COMMENT ON COLUMN YMYX_BIZ_COLUMN.ID IS '主键';
COMMENT ON COLUMN YMYX_BIZ_COLUMN.TABLE_ID IS '表ID';
COMMENT ON COLUMN YMYX_BIZ_COLUMN.KEY IS '别名';
COMMENT ON COLUMN YMYX_BIZ_COLUMN.NAME IS '名字';
COMMENT ON COLUMN YMYX_BIZ_COLUMN.TYPE IS '类型';
COMMENT ON COLUMN YMYX_BIZ_COLUMN.LENGTH IS '长度';
COMMENT ON COLUMN YMYX_BIZ_COLUMN.IS_DECIMAL IS '是否数字类型';
COMMENT ON COLUMN YMYX_BIZ_COLUMN.REQUIRED IS '是否必选,不为空';
COMMENT ON COLUMN YMYX_BIZ_COLUMN.IS_PRIMARY IS '是否主键';
COMMENT ON COLUMN YMYX_BIZ_COLUMN.DEFAULT_VALUE IS '默认值';
COMMENT ON COLUMN YMYX_BIZ_COLUMN.COMMENTS IS '备注';

CREATE TABLE YMYX_BIZ_COLUMN_CONTROL (
ID VARCHAR2(64) NOT NULL,
COLUMN_ID VARCHAR2(64) DEFAULT NULL NULL,
TYPE VARCHAR2(64) DEFAULT NULL NULL,
CONFIG VARCHAR2(256) DEFAULT NULL NULL,
VALID_RULE VARCHAR2(256) DEFAULT NULL NULL,
PRIMARY KEY (ID)
) ;
CREATE UNIQUE INDEX COLUMN_ID_UNIQUE ON YMYX_BIZ_COLUMN_CONTROL (COLUMN_ID);
COMMENT ON TABLE YMYX_BIZ_COLUMN_CONTROL IS '字段控件表';
COMMENT ON COLUMN YMYX_BIZ_COLUMN_CONTROL.ID IS '主键';
COMMENT ON COLUMN YMYX_BIZ_COLUMN_CONTROL.COLUMN_ID IS '字段ID';
COMMENT ON COLUMN YMYX_BIZ_COLUMN_CONTROL.TYPE IS '控件类型';
COMMENT ON COLUMN YMYX_BIZ_COLUMN_CONTROL.CONFIG IS '控件配置';
COMMENT ON COLUMN YMYX_BIZ_COLUMN_CONTROL.VALID_RULE IS '验证规则';

CREATE TABLE YMYX_BIZ_OBJECT (
ID VARCHAR2(64) NOT NULL,
KEY VARCHAR2(64) DEFAULT NULL NULL,
NAME VARCHAR2(128) DEFAULT NULL NULL,
DESCRIPTION VARCHAR2(256) DEFAULT NULL NULL,
RELATION_JSON CLOB DEFAULT NULL NULL,
GROUP_ID VARCHAR2(64) DEFAULT NULL NULL,
GROUP_NAME VARCHAR2(128) DEFAULT NULL NULL,
PERSISTENCE_TYPE VARCHAR2(64) DEFAULT NULL NULL,
PRIMARY KEY (ID)
) ;
CREATE UNIQUE INDEX IDX_UNI_BIZ_OBJECT_KEY ON YMYX_BIZ_OBJECT (KEY);
COMMENT ON TABLE YMYX_BIZ_OBJECT IS '业务对象';
COMMENT ON COLUMN YMYX_BIZ_OBJECT.ID IS '主键';
COMMENT ON COLUMN YMYX_BIZ_OBJECT.KEY IS 'KEY';
COMMENT ON COLUMN YMYX_BIZ_OBJECT.NAME IS '名字';
COMMENT ON COLUMN YMYX_BIZ_OBJECT.DESCRIPTION IS '描述';
COMMENT ON COLUMN YMYX_BIZ_OBJECT.RELATION_JSON IS 'RELATION字段用来持久化入库的字符串字段';
COMMENT ON COLUMN YMYX_BIZ_OBJECT.GROUP_ID IS '分组ID';
COMMENT ON COLUMN YMYX_BIZ_OBJECT.GROUP_NAME IS '分组名称';
COMMENT ON COLUMN YMYX_BIZ_OBJECT.PERSISTENCE_TYPE IS '持久化类型';

CREATE TABLE YMYX_BIZ_PERMISSION (
ID VARCHAR2(64) NOT NULL,
BO_KEY VARCHAR2(128) DEFAULT NULL NULL,
OBJ_TYPE VARCHAR2(64) NOT NULL,
OBJ_VAL VARCHAR2(128) DEFAULT NULL NULL,
BUS_OBJ_MAP_JSON CLOB DEFAULT NULL NULL,
RIGHTS_JSON CLOB DEFAULT NULL NULL,
PRIMARY KEY (ID)
) ;
CREATE UNIQUE INDEX OBJ_TYPE_OBJ_VAL_UNIQUE_IDX ON YMYX_BIZ_PERMISSION (OBJ_TYPE, OBJ_VAL);
COMMENT ON TABLE YMYX_BIZ_PERMISSION IS 'BO权限';
COMMENT ON COLUMN YMYX_BIZ_PERMISSION.BO_KEY IS 'BOKEY';
COMMENT ON COLUMN YMYX_BIZ_PERMISSION.OBJ_TYPE IS '配置这个权限的对象，可以是表单，流程，或流程节点';
COMMENT ON COLUMN YMYX_BIZ_PERMISSION.OBJ_VAL IS '能获取到配置权限的对象的唯一值通常是KEY或ID可以是自定义的.例如某个流程的某个节点可以是 流程KEY.NODEKEY这样的格式';
COMMENT ON COLUMN YMYX_BIZ_PERMISSION.BUS_OBJ_MAP_JSON IS 'BUSOBJMAP的JSON数据';
COMMENT ON COLUMN YMYX_BIZ_PERMISSION.RIGHTS_JSON IS 'RIGHTS的JSON数据';

CREATE TABLE YMYX_BIZ_TABLE (
ID VARCHAR2(64) NOT NULL,
KEY VARCHAR2(64) DEFAULT NULL NULL,
NAME VARCHAR2(64) DEFAULT NULL NULL,
COMMENTS VARCHAR2(256) DEFAULT NULL NULL,
DATASOURCE_KEY VARCHAR2(64) DEFAULT NULL NULL,
DATASOURCE_NAME VARCHAR2(128) DEFAULT NULL NULL,
GROUP_ID VARCHAR2(64) DEFAULT NULL NULL,
GROUP_NAME VARCHAR2(128) DEFAULT NULL NULL,
ISEXTERNAL NUMBER(6,0) DEFAULT NULL NULL,
PRIMARY KEY (ID)
);
CREATE UNIQUE INDEX IDX_UNI_BIZ_TABLE_KEY ON YMYX_BIZ_TABLE (KEY);
COMMENT ON TABLE YMYX_BIZ_TABLE IS '业务表';
COMMENT ON COLUMN YMYX_BIZ_TABLE.ID IS '主键';
COMMENT ON COLUMN YMYX_BIZ_TABLE.KEY IS '业务表KEY';
COMMENT ON COLUMN YMYX_BIZ_TABLE.NAME IS '表名';
COMMENT ON COLUMN YMYX_BIZ_TABLE.COMMENTS IS '描述';
COMMENT ON COLUMN YMYX_BIZ_TABLE.DATASOURCE_KEY IS '数据源的别名';
COMMENT ON COLUMN YMYX_BIZ_TABLE.DATASOURCE_NAME IS '数据源名称';
COMMENT ON COLUMN YMYX_BIZ_TABLE.GROUP_ID IS '分组ID';
COMMENT ON COLUMN YMYX_BIZ_TABLE.GROUP_NAME IS '分组名称';
COMMENT ON COLUMN YMYX_BIZ_TABLE.ISEXTERNAL IS '是否外部表';

CREATE TABLE YMYX_DB_UPLOADER (
ID VARCHAR2(64) NOT NULL,
BYTES BLOB DEFAULT NULL NULL,
PRIMARY KEY (ID)
);
CREATE TABLE YMYX_FORM_CUST_DIALOG (
ID VARCHAR2(64) NOT NULL,
KEY VARCHAR2(64) DEFAULT NULL NULL,
NAME VARCHAR2(128) NOT NULL,
DESCRIPTION VARCHAR2(256) DEFAULT NULL NULL,
STYLE VARCHAR2(32) DEFAULT NULL NULL,
DATASOURCE_KEY VARCHAR2(64) DEFAULT NULL NULL,
DATASOURCE_NAME VARCHAR2(128) DEFAULT NULL NULL,
OBJ_TYPE VARCHAR2(32) DEFAULT NULL NULL,
OBJ_NAME VARCHAR2(64) NOT NULL,
PAGE NUMBER(4,0) DEFAULT NULL NULL,
PAGE_SIZE NUMBER(11,0) DEFAULT NULL NULL,
WIDTH NUMBER(11,0) DEFAULT NULL NULL,
HEIGHT NUMBER(11,0) DEFAULT NULL NULL,
IS_SYSTEM NUMBER(4,0) DEFAULT NULL NULL,
MULTIPLE NUMBER(4,0) DEFAULT NULL NULL,
TREE_CONFIG_JSON VARCHAR2(512) DEFAULT NULL NULL,
DISPLAY_FIELDS_JSON CLOB DEFAULT NULL NULL,
CONDITION_FIELDS_JSON CLOB DEFAULT NULL NULL,
RETURN_FIELDS_JSON CLOB DEFAULT NULL NULL,
SORT_FIELDS_JSON CLOB DEFAULT NULL NULL,
DATA_SOURCE_FROM VARCHAR2(64) DEFAULT NULL NULL,
PRIMARY KEY (ID)
) ;
CREATE UNIQUE INDEX IDX_UNI_FORM_DIALOG_KEY ON YMYX_FORM_CUST_DIALOG (KEY);
COMMENT ON TABLE YMYX_FORM_CUST_DIALOG IS '自定义对话框';
COMMENT ON COLUMN YMYX_FORM_CUST_DIALOG.ID IS '主键';
COMMENT ON COLUMN YMYX_FORM_CUST_DIALOG.KEY IS '别名';
COMMENT ON COLUMN YMYX_FORM_CUST_DIALOG.NAME IS '名字';
COMMENT ON COLUMN YMYX_FORM_CUST_DIALOG.DESCRIPTION IS '描述';
COMMENT ON COLUMN YMYX_FORM_CUST_DIALOG.STYLE IS '显示类型';
COMMENT ON COLUMN YMYX_FORM_CUST_DIALOG.DATASOURCE_KEY IS '数据源别名';
COMMENT ON COLUMN YMYX_FORM_CUST_DIALOG.DATASOURCE_NAME IS '数据源名字';
COMMENT ON COLUMN YMYX_FORM_CUST_DIALOG.OBJ_TYPE IS '对象类型';
COMMENT ON COLUMN YMYX_FORM_CUST_DIALOG.OBJ_NAME IS '对象名称';
COMMENT ON COLUMN YMYX_FORM_CUST_DIALOG.PAGE IS '是否分页';
COMMENT ON COLUMN YMYX_FORM_CUST_DIALOG.PAGE_SIZE IS '分页大小';
COMMENT ON COLUMN YMYX_FORM_CUST_DIALOG.WIDTH IS '弹出框的宽度';
COMMENT ON COLUMN YMYX_FORM_CUST_DIALOG.HEIGHT IS '弹出框的高度';
COMMENT ON COLUMN YMYX_FORM_CUST_DIALOG.IS_SYSTEM IS '是否系统内置';
COMMENT ON COLUMN YMYX_FORM_CUST_DIALOG.MULTIPLE IS '是否多选';
COMMENT ON COLUMN YMYX_FORM_CUST_DIALOG.TREE_CONFIG_JSON IS '树形的配置信息，JSON字段';
COMMENT ON COLUMN YMYX_FORM_CUST_DIALOG.DISPLAY_FIELDS_JSON IS '显示字段';
COMMENT ON COLUMN YMYX_FORM_CUST_DIALOG.CONDITION_FIELDS_JSON IS '条件字段的JSON';
COMMENT ON COLUMN YMYX_FORM_CUST_DIALOG.RETURN_FIELDS_JSON IS '返回字段JSON';
COMMENT ON COLUMN YMYX_FORM_CUST_DIALOG.SORT_FIELDS_JSON IS '排序字段';
COMMENT ON COLUMN YMYX_FORM_CUST_DIALOG.DATA_SOURCE_FROM IS '数据来源类型:interface、database';


CREATE TABLE YMYX_FORM_DEF (
ID VARCHAR2(64) NOT NULL,
TYPE VARCHAR2(64) DEFAULT NULL NULL,
KEY VARCHAR2(64) DEFAULT NULL NULL,
NAME VARCHAR2(128) DEFAULT NULL NULL,
DESCRIPTION VARCHAR2(256) DEFAULT NULL NULL,
GROUP_ID VARCHAR2(64) DEFAULT NULL NULL,
GROUP_NAME VARCHAR2(128) DEFAULT NULL NULL,
BO_KEY VARCHAR2(64) DEFAULT NULL NULL,
BO_NAME VARCHAR2(128) DEFAULT NULL NULL,
HTML CLOB DEFAULT NULL NULL,
CREATE_TIME DATE DEFAULT NULL NULL,
CREATE_BY VARCHAR2(64) DEFAULT NULL NULL,
CREATOR VARCHAR2(128) DEFAULT NULL NULL,
UPDATE_TIME DATE DEFAULT NULL NULL,
UPDATE_BY VARCHAR2(64) DEFAULT NULL NULL,
UPDATOR VARCHAR2(128) DEFAULT NULL NULL,
VERSION NUMBER(11,0) DEFAULT NULL NULL,
IS_DELETE NUMBER(4,0) DEFAULT NULL NULL,
PRIMARY KEY (ID)
);
CREATE UNIQUE INDEX IDX_YMYX_FORM_DEF_KEY ON YMYX_FORM_DEF (KEY);
COMMENT ON TABLE YMYX_FORM_DEF IS '表单';
COMMENT ON COLUMN YMYX_FORM_DEF.ID IS '主键';
COMMENT ON COLUMN YMYX_FORM_DEF.TYPE IS '分类(PC/MOBILE)';
COMMENT ON COLUMN YMYX_FORM_DEF.KEY IS 'KEY';
COMMENT ON COLUMN YMYX_FORM_DEF.NAME IS '名字';
COMMENT ON COLUMN YMYX_FORM_DEF.DESCRIPTION IS '描述';
COMMENT ON COLUMN YMYX_FORM_DEF.GROUP_ID IS '分组ID';
COMMENT ON COLUMN YMYX_FORM_DEF.GROUP_NAME IS '分组名称';
COMMENT ON COLUMN YMYX_FORM_DEF.BO_KEY IS '业务对象KEY';
COMMENT ON COLUMN YMYX_FORM_DEF.BO_NAME IS '业务对象名称';
COMMENT ON COLUMN YMYX_FORM_DEF.HTML IS 'HTML';
COMMENT ON COLUMN YMYX_FORM_DEF.CREATE_TIME IS '创建时间';
COMMENT ON COLUMN YMYX_FORM_DEF.CREATE_BY IS '创建人ID';
COMMENT ON COLUMN YMYX_FORM_DEF.CREATOR IS '创建人名字';
COMMENT ON COLUMN YMYX_FORM_DEF.UPDATE_TIME IS '更新时间';
COMMENT ON COLUMN YMYX_FORM_DEF.UPDATE_BY IS '更新人ID';
COMMENT ON COLUMN YMYX_FORM_DEF.UPDATOR IS '更新人名字';
COMMENT ON COLUMN YMYX_FORM_DEF.VERSION IS '版本号';
COMMENT ON COLUMN YMYX_FORM_DEF.IS_DELETE IS '逻辑删除标记';

CREATE TABLE YMYX_FORM_TEMPLATE (
ID VARCHAR2(64) NOT NULL,
NAME VARCHAR2(128) DEFAULT NULL NULL,
FORM_TYPE VARCHAR2(64) DEFAULT NULL NULL,
TYPE VARCHAR2(32) DEFAULT NULL NULL,
HTML CLOB DEFAULT NULL NULL,
DESCRIPTION VARCHAR2(400) DEFAULT NULL NULL,
EDITABLE NUMBER(4,0) DEFAULT NULL NULL,
KEY VARCHAR2(64) DEFAULT NULL NULL,
PRIMARY KEY (ID)
);
COMMENT ON TABLE YMYX_FORM_TEMPLATE IS '表单模版';
COMMENT ON COLUMN YMYX_FORM_TEMPLATE.ID IS '模板ID';
COMMENT ON COLUMN YMYX_FORM_TEMPLATE.NAME IS '模板名称';
COMMENT ON COLUMN YMYX_FORM_TEMPLATE.FORM_TYPE IS '表单类型(PC/MOBILE/VUEPC)';
COMMENT ON COLUMN YMYX_FORM_TEMPLATE.TYPE IS '模板类型';
COMMENT ON COLUMN YMYX_FORM_TEMPLATE.HTML IS '模板内容';
COMMENT ON COLUMN YMYX_FORM_TEMPLATE.DESCRIPTION IS '模板描述';
COMMENT ON COLUMN YMYX_FORM_TEMPLATE.EDITABLE IS '是否可以编辑';
COMMENT ON COLUMN YMYX_FORM_TEMPLATE.KEY IS '别名';

CREATE TABLE YMYX_GROUP (
ID VARCHAR2(64) NOT NULL,
NAME VARCHAR2(64) NOT NULL,
PARENT_ID VARCHAR2(64) DEFAULT NULL NULL,
SEQ NUMBER(11,0) DEFAULT 100 NULL,
CODE VARCHAR2(64) NOT NULL,
GRADE VARCHAR2(64) DEFAULT NULL NULL,
DESCRIPTION VARCHAR2(500) DEFAULT NULL NULL,
PRIMARY KEY (ID)
) ;
COMMENT ON TABLE YMYX_GROUP IS '组织架构';
COMMENT ON COLUMN YMYX_GROUP.ID IS '主键';
COMMENT ON COLUMN YMYX_GROUP.GRADE IS '级别';

CREATE TABLE YMYX_GROUP_POSITION_LINK (
ID VARCHAR2(64) NOT NULL,
GROUP_ID VARCHAR2(64) DEFAULT NULL NULL,
POSITION_ID VARCHAR2(64) DEFAULT NULL NULL,
POSITION_NAME VARCHAR2(64) DEFAULT NULL NULL,
POSITION_CODE VARCHAR2(64) DEFAULT NULL NULL,
JOB_NAME VARCHAR2(64) DEFAULT NULL NULL,
PRIMARY KEY (ID)
);
CREATE INDEX IDX_GRPPOS_LNK_POST_ID ON YMYX_GROUP_POSITION_LINK (POSITION_ID);
CREATE INDEX IDX_GRPPOS_LNK_GROUP_ID ON YMYX_GROUP_POSITION_LINK (GROUP_ID);
COMMENT ON TABLE YMYX_GROUP_POSITION_LINK IS '组织关联关系';
COMMENT ON COLUMN YMYX_GROUP_POSITION_LINK.POSITION_NAME IS '岗位名称';
COMMENT ON COLUMN YMYX_GROUP_POSITION_LINK.POSITION_CODE IS '岗位编码';
COMMENT ON COLUMN YMYX_GROUP_POSITION_LINK.JOB_NAME IS '职务名称';

CREATE TABLE YMYX_POSITION (
ID VARCHAR2(64) NOT NULL,
NAME VARCHAR2(64) NOT NULL,
CODE VARCHAR2(64) NOT NULL,
POST_LEVEL VARCHAR2(64) DEFAULT NULL NULL,
DESCRIPTION VARCHAR2(500) DEFAULT NULL NULL,
PRIMARY KEY (ID)
) ;
COMMENT ON TABLE YMYX_POSITION IS '岗位定义表';
COMMENT ON COLUMN YMYX_POSITION.NAME IS '名称';
COMMENT ON COLUMN YMYX_POSITION.CODE IS '编码';
COMMENT ON COLUMN YMYX_POSITION.POST_LEVEL IS '岗位级别';
COMMENT ON COLUMN YMYX_POSITION.DESCRIPTION IS '描述';

CREATE TABLE YMYX_JOB (
ID VARCHAR2(64) NOT NULL,
NAME VARCHAR2(64) NOT NULL,
CODE VARCHAR2(64) NOT NULL,
JOB_LEVEL VARCHAR2(64) DEFAULT NULL NULL,
DESCRIPTION VARCHAR2(500) DEFAULT NULL NULL,
PRIMARY KEY (ID)
) ;
COMMENT ON TABLE YMYX_JOB IS '职务定义表';
COMMENT ON COLUMN YMYX_JOB.NAME IS '名称';
COMMENT ON COLUMN YMYX_JOB.CODE IS '编码';
COMMENT ON COLUMN YMYX_JOB.JOB_LEVEL IS '职务级别';
COMMENT ON COLUMN YMYX_JOB.DESCRIPTION IS '描述';

CREATE TABLE YMYX_GROUP_USER_LINK (
ID VARCHAR2(64) NOT NULL,
GROUP_ID VARCHAR2(64) NOT NULL,
USER_ID VARCHAR2(64) NOT NULL,
IS_MASTER NUMBER(11,0) DEFAULT 0 NOT NULL,
POSITION_ID VARCHAR2(64) DEFAULT NULL NULL,
JOB_ID VARCHAR2(64) DEFAULT NULL NULL,
PRIMARY KEY (ID)
) ;
CREATE INDEX IDX_GRP_USER_LNK_USER_ID ON YMYX_GROUP_USER_LINK (USER_ID);
CREATE INDEX IDX_GRP_USER_LNK_GROUP_ID ON YMYX_GROUP_USER_LINK (GROUP_ID);
CREATE INDEX IDX_GRP_USER_LNK_POSITION_ID ON YMYX_GROUP_USER_LINK (POSITION_ID);
COMMENT ON TABLE YMYX_GROUP_USER_LINK IS '用户组织关联关系表';
COMMENT ON COLUMN YMYX_GROUP_USER_LINK.IS_MASTER IS '0:非主部门，1：主部门';
COMMENT ON COLUMN YMYX_GROUP_USER_LINK.GROUP_ID IS '组织ID';
COMMENT ON COLUMN YMYX_GROUP_USER_LINK.USER_ID IS '用户ID';
COMMENT ON COLUMN YMYX_GROUP_USER_LINK.POSITION_ID IS '岗位';
COMMENT ON COLUMN YMYX_GROUP_USER_LINK.JOB_ID IS '职务';

CREATE TABLE YMYX_ROLE (
ID VARCHAR2(64) NOT NULL,
NAME VARCHAR2(64) NOT NULL,
ALIAS VARCHAR2(64) NOT NULL,
ENABLED NUMBER(11,0) DEFAULT 1 NOT NULL,
DESCRIPTION VARCHAR2(200) NOT NULL,
PRIMARY KEY (ID)
);
COMMENT ON TABLE YMYX_ROLE IS '角色管理';
COMMENT ON COLUMN YMYX_ROLE.NAME IS '角色名称';
COMMENT ON COLUMN YMYX_ROLE.ALIAS IS '英文别名';
COMMENT ON COLUMN YMYX_ROLE.ENABLED IS '0:禁用1:启用';
COMMENT ON COLUMN YMYX_ROLE.DESCRIPTION IS '描述';

CREATE TABLE YMYX_USER (
ID VARCHAR2(64) NOT NULL,
FULLNAME VARCHAR2(255) NOT NULL,
ACCOUNT VARCHAR2(255) NOT NULL,
PASSWORD VARCHAR2(64) NOT NULL,
EMAIL VARCHAR2(64) DEFAULT NULL NULL,
MOBILE VARCHAR2(32) DEFAULT NULL NULL,
WEIXIN VARCHAR2(64) DEFAULT NULL NULL,
CREATE_TIME DATE DEFAULT NULL NULL,
ADDRESS VARCHAR2(512) DEFAULT NULL NULL,
PHOTO VARCHAR2(255) DEFAULT NULL NULL,
SEX VARCHAR2(10) DEFAULT NULL NULL,
USERFROM VARCHAR2(64) DEFAULT NULL NULL,
STATUS NUMBER(11,0) DEFAULT 1 NOT NULL,
PRIMARY KEY (ID)
) ;
COMMENT ON TABLE YMYX_USER IS '用户表';
COMMENT ON COLUMN YMYX_USER.FULLNAME IS '姓名';
COMMENT ON COLUMN YMYX_USER.ACCOUNT IS '账号';
COMMENT ON COLUMN YMYX_USER.PASSWORD IS '密码';
COMMENT ON COLUMN YMYX_USER.EMAIL IS '邮箱';
COMMENT ON COLUMN YMYX_USER.MOBILE IS '手机号码';
COMMENT ON COLUMN YMYX_USER.WEIXIN IS '微信号';
COMMENT ON COLUMN YMYX_USER.CREATE_TIME IS '创建时间';
COMMENT ON COLUMN YMYX_USER.ADDRESS IS '地址';
COMMENT ON COLUMN YMYX_USER.PHOTO IS '头像';
COMMENT ON COLUMN YMYX_USER.SEX IS '性别：男，女，未知';
COMMENT ON COLUMN YMYX_USER.USERFROM IS '来源';
COMMENT ON COLUMN YMYX_USER.STATUS IS '0:禁用，1正常';

CREATE TABLE YMYX_USER_ROLE_LINK (
ID VARCHAR2(64) NOT NULL,
ROLE_ID VARCHAR2(64) NOT NULL,
USER_ID VARCHAR2(64) NOT NULL,
ENABLED NUMBER(11,0) DEFAULT 1 NOT NULL,
PRIMARY KEY (ID)
) ;
CREATE INDEX IDX_UR_LNK_ROLE_ID ON YMYX_USER_ROLE_LINK (ROLE_ID);
CREATE INDEX IDX_UR_LNK_USER_ID ON YMYX_USER_ROLE_LINK (USER_ID);
COMMENT ON TABLE YMYX_USER_ROLE_LINK IS '用户角色关联表';


CREATE TABLE YMYX_AUTHORIZATION (
RIGHTS_ID VARCHAR2(64) NOT NULL,
RIGHTS_OBJECT VARCHAR2(64) NOT NULL,
RIGHTS_TARGET VARCHAR2(64) NOT NULL,
RIGHTS_TYPE VARCHAR2(64) NOT NULL,
RIGHTS_IDENTITY VARCHAR2(64) NOT NULL,
RIGHTS_IDENTITY_NAME VARCHAR2(255) NOT NULL,
RIGHTS_PERMISSION_CODE VARCHAR2(125) NOT NULL,
RIGHTS_CREATE_TIME DATE NOT NULL,
RIGHTS_CREATE_BY VARCHAR2(64) NOT NULL,
PRIMARY KEY (RIGHTS_ID)
) ;
CREATE INDEX IDX_PERMISSION_CODE ON YMYX_AUTHORIZATION (RIGHTS_PERMISSION_CODE);
COMMENT ON TABLE YMYX_AUTHORIZATION IS '通用资源授权配置';
COMMENT ON COLUMN YMYX_AUTHORIZATION.RIGHTS_ID IS 'ID';
COMMENT ON COLUMN YMYX_AUTHORIZATION.RIGHTS_OBJECT IS '授权对象表分区用';
COMMENT ON COLUMN YMYX_AUTHORIZATION.RIGHTS_TARGET IS '授权目标ID';
COMMENT ON COLUMN YMYX_AUTHORIZATION.RIGHTS_TYPE IS '权限类型';
COMMENT ON COLUMN YMYX_AUTHORIZATION.RIGHTS_IDENTITY IS '授权标识';
COMMENT ON COLUMN YMYX_AUTHORIZATION.RIGHTS_IDENTITY_NAME IS '标识名字';
COMMENT ON COLUMN YMYX_AUTHORIZATION.RIGHTS_PERMISSION_CODE IS '授权CODE=IDENTITY+TYPE';
COMMENT ON COLUMN YMYX_AUTHORIZATION.RIGHTS_CREATE_TIME IS '创建时间';
COMMENT ON COLUMN YMYX_AUTHORIZATION.RIGHTS_CREATE_BY IS '创建人';

CREATE TABLE YMYX_DATA_DICT (
ID VARCHAR2(64) NOT NULL,
PARENT_ID VARCHAR2(64) DEFAULT NULL NULL,
KEY VARCHAR2(255) NOT NULL,
NAME VARCHAR2(255) NOT NULL,
DICT_KEY VARCHAR2(255) NOT NULL,
TYPE_ID VARCHAR2(64) DEFAULT NULL NULL,
SEQ NUMBER(11,0) DEFAULT NULL NULL,
DICT_TYPE VARCHAR2(10) NOT NULL,
IS_DELETE VARCHAR2(1) DEFAULT NULL NULL,
CREATE_TIME DATE NOT NULL,
PRIMARY KEY (ID)
);
COMMENT ON TABLE YMYX_DATA_DICT IS '数据字典';
COMMENT ON COLUMN YMYX_DATA_DICT.ID IS 'ID';
COMMENT ON COLUMN YMYX_DATA_DICT.PARENT_ID IS '上级ID';
COMMENT ON COLUMN YMYX_DATA_DICT.KEY IS 'KEY';
COMMENT ON COLUMN YMYX_DATA_DICT.NAME IS 'NAME';
COMMENT ON COLUMN YMYX_DATA_DICT.DICT_KEY IS '字典KEY';
COMMENT ON COLUMN YMYX_DATA_DICT.TYPE_ID IS '分组ID';
COMMENT ON COLUMN YMYX_DATA_DICT.SEQ IS '排序';
COMMENT ON COLUMN YMYX_DATA_DICT.DICT_TYPE IS 'DICT/NODE字典项';
COMMENT ON COLUMN YMYX_DATA_DICT.IS_DELETE IS '是否删除';
COMMENT ON COLUMN YMYX_DATA_DICT.CREATE_TIME IS '创建时间';

CREATE TABLE YMYX_DATA_SOURCE (
ID VARCHAR2(64) NOT NULL,
KEY VARCHAR2(64) DEFAULT NULL NULL,
NAME VARCHAR2(64) DEFAULT NULL NULL,
DESCRIPTION VARCHAR2(256) DEFAULT NULL NULL,
DB_TYPE VARCHAR2(64) DEFAULT NULL NULL,
CLASS_PATH VARCHAR2(100) DEFAULT NULL NULL,
ATTRIBUTES_JSON CLOB DEFAULT NULL NULL,
PRIMARY KEY (ID)
);
CREATE UNIQUE INDEX IDX_DS_UNI_KEY ON YMYX_DATA_SOURCE (KEY);
COMMENT ON TABLE YMYX_DATA_SOURCE IS '数据源';
COMMENT ON COLUMN YMYX_DATA_SOURCE.ID IS '主键';
COMMENT ON COLUMN YMYX_DATA_SOURCE.KEY IS '别名';
COMMENT ON COLUMN YMYX_DATA_SOURCE.NAME IS '数据源名称';
COMMENT ON COLUMN YMYX_DATA_SOURCE.DESCRIPTION IS '数据源的描述';
COMMENT ON COLUMN YMYX_DATA_SOURCE.DB_TYPE IS '数据库类型';
COMMENT ON COLUMN YMYX_DATA_SOURCE.CLASS_PATH IS '数据源全路径';
COMMENT ON COLUMN YMYX_DATA_SOURCE.ATTRIBUTES_JSON IS '属性配置';

CREATE TABLE YMYX_DATA_SOURCE_DEF (
ID VARCHAR2(64) NOT NULL,
NAME VARCHAR2(64) DEFAULT NULL NULL,
CLASS_PATH VARCHAR2(100) DEFAULT NULL NULL,
ATTRIBUTES_JSON CLOB DEFAULT NULL NULL,
PRIMARY KEY (ID)
);
CREATE INDEX IDX_DSD_UNI_CLS_PATH ON YMYX_DATA_SOURCE_DEF (CLASS_PATH);
COMMENT ON TABLE YMYX_DATA_SOURCE_DEF IS '数据源模板';
COMMENT ON COLUMN YMYX_DATA_SOURCE_DEF.ID IS '主键';
COMMENT ON COLUMN YMYX_DATA_SOURCE_DEF.NAME IS '数据源名称';
COMMENT ON COLUMN YMYX_DATA_SOURCE_DEF.CLASS_PATH IS '数据源全路径';
COMMENT ON COLUMN YMYX_DATA_SOURCE_DEF.ATTRIBUTES_JSON IS '属性配置';

CREATE TABLE YMYX_FILE (
ID VARCHAR2(64) NOT NULL,
NAME VARCHAR2(64) DEFAULT NULL NULL,
UPLOADER VARCHAR2(128) DEFAULT NULL NULL,
PATH VARCHAR2(256) DEFAULT NULL NULL,
CREATE_TIME DATE DEFAULT NULL NULL,
CREATE_BY VARCHAR2(64) DEFAULT NULL NULL,
UPDATE_TIME DATE DEFAULT NULL NULL,
UPDATE_BY VARCHAR2(64) DEFAULT NULL NULL,
VERSION NUMBER(11,0) DEFAULT NULL NULL,
IS_DELETE NUMBER(4,0) DEFAULT NULL NULL,
PRIMARY KEY (ID)
);
COMMENT ON TABLE YMYX_FILE IS '系统附件';
COMMENT ON COLUMN YMYX_FILE.ID IS '主键';
COMMENT ON COLUMN YMYX_FILE.NAME IS '附件名';
COMMENT ON COLUMN YMYX_FILE.UPLOADER IS '上传器';
COMMENT ON COLUMN YMYX_FILE.CREATE_TIME IS '创建时间';
COMMENT ON COLUMN YMYX_FILE.CREATE_BY IS '创建人ID';
COMMENT ON COLUMN YMYX_FILE.UPDATE_TIME IS '更新时间';
COMMENT ON COLUMN YMYX_FILE.UPDATE_BY IS '更新人ID';
COMMENT ON COLUMN YMYX_FILE.VERSION IS '版本号';
COMMENT ON COLUMN YMYX_FILE.IS_DELETE IS '逻辑删除标记';

CREATE TABLE YMYX_LOG_ERR (
ID VARCHAR2(50) NOT NULL,
ACCOUNT VARCHAR2(20) DEFAULT NULL NULL,
IP VARCHAR2(20) DEFAULT NULL NULL,
URL VARCHAR2(1500) DEFAULT NULL NULL,
CONTENT CLOB DEFAULT NULL NULL,
CREATE_TIME DATE DEFAULT NULL NULL,
STACK_TRACE CLOB DEFAULT NULL NULL,
PRIMARY KEY (ID)
);
COMMENT ON COLUMN YMYX_LOG_ERR.ID IS '主键';
COMMENT ON COLUMN YMYX_LOG_ERR.ACCOUNT IS '帐号';
COMMENT ON COLUMN YMYX_LOG_ERR.IP IS 'IP来源';
COMMENT ON COLUMN YMYX_LOG_ERR.URL IS '错误URL';
COMMENT ON COLUMN YMYX_LOG_ERR.CONTENT IS '出错信息';
COMMENT ON COLUMN YMYX_LOG_ERR.CREATE_TIME IS '出错时间';
COMMENT ON COLUMN YMYX_LOG_ERR.STACK_TRACE IS '出错异常堆栈';

CREATE TABLE YMYX_PROPERTIES (
ID VARCHAR2(64) NOT NULL,
NAME VARCHAR2(64) DEFAULT NULL NULL,
ALIAS VARCHAR2(64) DEFAULT NULL NULL,
CATEGORY VARCHAR2(64) DEFAULT NULL NULL,
VALUE VARCHAR2(500) DEFAULT NULL NULL,
ENCRYPT NUMBER(11,0) DEFAULT NULL NULL,
UPDATE_BY VARCHAR2(64) DEFAULT NULL NULL,
UPDATE_TIME DATE DEFAULT NULL NULL,
CREATE_BY VARCHAR2(64) DEFAULT NULL NULL,
CREATE_TIME DATE DEFAULT NULL NULL,
DESCRIPTION VARCHAR2(500) DEFAULT NULL NULL,
ENVIRONMENT VARCHAR2(64) DEFAULT NULL NULL,
PRIMARY KEY (ID)
);


CREATE TABLE YMYX_RESOURCE_LINK (
ID VARCHAR2(50) NOT NULL,
RES_ID VARCHAR2(50) DEFAULT NULL NULL,
NAME VARCHAR2(50) DEFAULT NULL NULL,
RES_URL VARCHAR2(100) DEFAULT NULL NULL,
PRIMARY KEY (ID)
);
COMMENT ON TABLE YMYX_RESOURCE_LINK IS '系统资源';
COMMENT ON COLUMN YMYX_RESOURCE_LINK.ID IS '主键';
COMMENT ON COLUMN YMYX_RESOURCE_LINK.RES_ID IS '资源ID';
COMMENT ON COLUMN YMYX_RESOURCE_LINK.NAME IS '名称';
COMMENT ON COLUMN YMYX_RESOURCE_LINK.RES_URL IS '资源地址';

CREATE TABLE YMYX_ROLE_RESOURCE_LINK (
ID VARCHAR2(50) DEFAULT '' NOT NULL,
APPLICATION_ID VARCHAR2(50) DEFAULT NULL NULL,
RES_ID VARCHAR2(50) DEFAULT NULL NULL,
ROLE_ID VARCHAR2(50) DEFAULT NULL NULL,
PRIMARY KEY (ID)
);
COMMENT ON TABLE YMYX_ROLE_RESOURCE_LINK IS '角色资源分配';
COMMENT ON COLUMN YMYX_ROLE_RESOURCE_LINK.ID IS '主键';
COMMENT ON COLUMN YMYX_ROLE_RESOURCE_LINK.SYSTEM_ID IS '系统ID';
COMMENT ON COLUMN YMYX_ROLE_RESOURCE_LINK.RES_ID IS '资源ID';
COMMENT ON COLUMN YMYX_ROLE_RESOURCE_LINK.ROLE_ID IS '角色ID';

CREATE TABLE YMYX_RESOURCE (
ID VARCHAR2(50) NOT NULL,
APPLICATION_ID VARCHAR2(50) DEFAULT NULL NULL,
ALIAS VARCHAR2(50) DEFAULT NULL NULL,
NAME VARCHAR2(50) DEFAULT NULL NULL,
DEFAULT_URL VARCHAR2(50) DEFAULT NULL NULL,
ENABLE_MENU NUMBER(11,0) DEFAULT NULL NULL,
HAS_CHILDREN NUMBER(11,0) DEFAULT NULL NULL,
OPENED NUMBER(11,0) DEFAULT NULL NULL,
ICON VARCHAR2(50) DEFAULT NULL NULL,
NEW_WINDOW NUMBER(11,0) DEFAULT NULL NULL,
SEQ NUMBER(20,0) DEFAULT NULL NULL,
PARENT_ID VARCHAR2(50) DEFAULT NULL NULL,
CREATE_TIME DATE DEFAULT NULL NULL,
PRIMARY KEY (ID)
);
COMMENT ON TABLE YMYX_RESOURCE IS '系统资源';
COMMENT ON COLUMN YMYX_RESOURCE.ID IS '主键';
COMMENT ON COLUMN YMYX_RESOURCE.SYSTEM_ID IS '应用ID';
COMMENT ON COLUMN YMYX_RESOURCE.ALIAS IS '应用系统中独一无二';
COMMENT ON COLUMN YMYX_RESOURCE.NAME IS '资源名';
COMMENT ON COLUMN YMYX_RESOURCE.DEFAULT_URL IS '默认地址';
COMMENT ON COLUMN YMYX_RESOURCE.ENABLE_MENU IS '显示到菜单(1,显示,0 ,不显示)';
COMMENT ON COLUMN YMYX_RESOURCE.HAS_CHILDREN IS '是否有子节点';
COMMENT ON COLUMN YMYX_RESOURCE.ICON IS '图标';
COMMENT ON COLUMN YMYX_RESOURCE.NEW_WINDOW IS '打开新窗口';
COMMENT ON COLUMN YMYX_RESOURCE.SEQ IS '排序';
COMMENT ON COLUMN YMYX_RESOURCE.PARENT_ID IS '父节点ID';
COMMENT ON COLUMN YMYX_RESOURCE.CREATE_TIME IS '创建时间';

CREATE TABLE YMYX_SCHEDULE_JOB (
ID VARCHAR2(64) NOT NULL,
NAME VARCHAR2(50) NOT NULL,
CATEGORY VARCHAR2(100) NOT NULL,
DESCRIPTION VARCHAR2(1000) DEFAULT NULL NULL,
INVOKE_TARGET VARCHAR2(500) NOT NULL,
CRON_EXPRESSION VARCHAR2(50) NOT NULL,
RUNNING_STATE VARCHAR2(10) NOT NULL,
IS_CONCURRENT NUMBER(4,0) DEFAULT 0 NOT NULL,
CREATE_BY VARCHAR2(50) DEFAULT NULL NULL,
CREATE_TIME DATE DEFAULT NULL NULL,
UPDATE_BY VARCHAR2(50) DEFAULT NULL NULL,
UPDATE_TIME DATE DEFAULT NULL NULL,
IS_DELETE NUMBER(4,0) DEFAULT 0 NULL,
PRIMARY KEY (ID)
);
COMMENT ON TABLE YMYX_SCHEDULE_JOB IS '系统任务计划';
COMMENT ON COLUMN YMYX_SCHEDULE_JOB.ID IS '主键编号';
COMMENT ON COLUMN YMYX_SCHEDULE_JOB.NAME IS '任务计划名称';
COMMENT ON COLUMN YMYX_SCHEDULE_JOB.CATEGORY IS '任务计划分组';
COMMENT ON COLUMN YMYX_SCHEDULE_JOB.DESCRIPTION IS '任务计划说明';
COMMENT ON COLUMN YMYX_SCHEDULE_JOB.INVOKE_TARGET IS '调用目标';
COMMENT ON COLUMN YMYX_SCHEDULE_JOB.CRON_EXPRESSION IS '运行表达式';
COMMENT ON COLUMN YMYX_SCHEDULE_JOB.RUNNING_STATE IS '运行状态';
COMMENT ON COLUMN YMYX_SCHEDULE_JOB.IS_CONCURRENT IS '是否并发执行';
COMMENT ON COLUMN YMYX_SCHEDULE_JOB.CREATE_BY IS '创建用户';
COMMENT ON COLUMN YMYX_SCHEDULE_JOB.CREATE_TIME IS '创建时间';
COMMENT ON COLUMN YMYX_SCHEDULE_JOB.UPDATE_BY IS '修改用户';
COMMENT ON COLUMN YMYX_SCHEDULE_JOB.UPDATE_TIME IS '修改时间';
COMMENT ON COLUMN YMYX_SCHEDULE_JOB.IS_DELETE IS '有效记录:0:正常1:已删除';

CREATE TABLE YMYX_SCHEDULE_JOB_LOG (
ID VARCHAR2(64) NOT NULL,
JOB_ID VARCHAR2(64) NOT NULL,
RUN_STATE VARCHAR2(50) NOT NULL,
RUN_MS NUMBER(11,0) NOT NULL,
CONTENT CLOB DEFAULT NULL NULL,
START_TIME DATE NOT NULL,
END_TIME DATE NOT NULL,
CREATE_BY VARCHAR2(50) DEFAULT NULL NULL,
CREATE_TIME DATE DEFAULT NULL NULL,
UPDATE_BY VARCHAR2(50) DEFAULT NULL NULL,
UPDATE_TIME DATE DEFAULT NULL NULL,
IS_DELETE NUMBER(4,0) DEFAULT 0 NULL,
PRIMARY KEY (ID)
);
CREATE INDEX IDX_SCH_JOB_LOGJOB_ID ON YMYX_SCHEDULE_JOB_LOG (JOB_ID);
COMMENT ON TABLE YMYX_SCHEDULE_JOB_LOG IS '任务计划日志';
COMMENT ON COLUMN YMYX_SCHEDULE_JOB_LOG.ID IS '编号';
COMMENT ON COLUMN YMYX_SCHEDULE_JOB_LOG.JOB_ID IS '任务计划ID';
COMMENT ON COLUMN YMYX_SCHEDULE_JOB_LOG.RUN_STATE IS '执行状态';
COMMENT ON COLUMN YMYX_SCHEDULE_JOB_LOG.RUN_MS IS '运行毫秒';
COMMENT ON COLUMN YMYX_SCHEDULE_JOB_LOG.CONTENT IS '运行内容';
COMMENT ON COLUMN YMYX_SCHEDULE_JOB_LOG.START_TIME IS '运行启动时间';
COMMENT ON COLUMN YMYX_SCHEDULE_JOB_LOG.END_TIME IS '运行结束时间';
COMMENT ON COLUMN YMYX_SCHEDULE_JOB_LOG.CREATE_BY IS '创建用户';
COMMENT ON COLUMN YMYX_SCHEDULE_JOB_LOG.CREATE_TIME IS '创建时间';
COMMENT ON COLUMN YMYX_SCHEDULE_JOB_LOG.UPDATE_BY IS '修改用户';
COMMENT ON COLUMN YMYX_SCHEDULE_JOB_LOG.UPDATE_TIME IS '修改时间';
COMMENT ON COLUMN YMYX_SCHEDULE_JOB_LOG.IS_DELETE IS '有效记录:0:正常1:已删除';

CREATE TABLE YMYX_SCRIPT (
ID VARCHAR2(64) NOT NULL,
NAME VARCHAR2(128) DEFAULT NULL NULL,
SCRIPT CLOB DEFAULT NULL NULL,
CATEGORY VARCHAR2(128) DEFAULT NULL NULL,
NOTES VARCHAR2(512) DEFAULT NULL NULL,
PRIMARY KEY (ID)
);
COMMENT ON TABLE YMYX_SCRIPT IS '常用脚本';
COMMENT ON COLUMN YMYX_SCRIPT.ID IS '主键';
COMMENT ON COLUMN YMYX_SCRIPT.NAME IS '脚本名称';
COMMENT ON COLUMN YMYX_SCRIPT.SCRIPT IS '脚本';
COMMENT ON COLUMN YMYX_SCRIPT.CATEGORY IS '脚本分类';
COMMENT ON COLUMN YMYX_SCRIPT.NOTES IS '备注';

CREATE TABLE YMYX_SERIALNO (
ID VARCHAR2(64) NOT NULL,
NAME VARCHAR2(64) DEFAULT NULL NULL,
ALIAS VARCHAR2(20) DEFAULT NULL NULL,
RULE VARCHAR2(128) DEFAULT NULL NULL,
GEN_TYPE NUMBER(6,0) DEFAULT NULL NULL,
NO_LENGTH NUMBER(11,0) DEFAULT NULL NULL,
CUR_DATE VARCHAR2(20) DEFAULT NULL NULL,
INIT_VALUE NUMBER(11,0) DEFAULT NULL NULL,
CUR_VALUE NUMBER(11,0) DEFAULT NULL NULL,
STEP NUMBER(6,0) DEFAULT NULL NULL,
PRIMARY KEY (ID)
);
CREATE INDEX IDX_UNI_SERIALNO_ALIAS_VAL ON YMYX_SERIALNO (ALIAS, CUR_VALUE);
COMMENT ON TABLE YMYX_SERIALNO IS '流水号生成';
COMMENT ON COLUMN YMYX_SERIALNO.ID IS '主键';
COMMENT ON COLUMN YMYX_SERIALNO.NAME IS '名称';
COMMENT ON COLUMN YMYX_SERIALNO.ALIAS IS '别名';
COMMENT ON COLUMN YMYX_SERIALNO.RULE IS '规则';
COMMENT ON COLUMN YMYX_SERIALNO.GEN_TYPE IS '生成类型';
COMMENT ON COLUMN YMYX_SERIALNO.NO_LENGTH IS '流水号长度';
COMMENT ON COLUMN YMYX_SERIALNO.CUR_DATE IS '当前日期';
COMMENT ON COLUMN YMYX_SERIALNO.INIT_VALUE IS '初始值';
COMMENT ON COLUMN YMYX_SERIALNO.CUR_VALUE IS '当前值';
COMMENT ON COLUMN YMYX_SERIALNO.STEP IS '步长';

CREATE TABLE YMYX_APPLICATION (
ID VARCHAR2(50) NOT NULL,
NAME VARCHAR2(50) DEFAULT NULL NULL,
ALIAS VARCHAR2(50) DEFAULT NULL NULL,
LOGO VARCHAR2(50) DEFAULT NULL NULL,
ENABLED NUMBER(11,0) DEFAULT NULL NULL,
HOME_URL VARCHAR2(100) DEFAULT NULL NULL,
BASE_URL VARCHAR2(50) DEFAULT NULL NULL,
TENANT VARCHAR2(50) DEFAULT NULL NULL,
NOTES VARCHAR2(200) DEFAULT NULL NULL,
CREATOR_ID VARCHAR2(50) DEFAULT NULL NULL,
CREATOR VARCHAR2(50) DEFAULT NULL NULL,
CREATE_TIME DATE DEFAULT NULL NULL,
IS_DEFAULT NUMBER(11,0) DEFAULT NULL NULL,
PRIMARY KEY (ID)
);
COMMENT ON TABLE YMYX_APPLICATION IS '系统应用定义';
COMMENT ON COLUMN YMYX_APPLICATION.ID IS '主键';
COMMENT ON COLUMN YMYX_APPLICATION.NAME IS '系统名称';
COMMENT ON COLUMN YMYX_APPLICATION.ALIAS IS '系统别名';
COMMENT ON COLUMN YMYX_APPLICATION.LOGO IS 'LOGO地址';
COMMENT ON COLUMN YMYX_APPLICATION.ENABLED IS '是否可用1:可用0:不可用';
COMMENT ON COLUMN YMYX_APPLICATION.HOME_URL IS '主页地址';
COMMENT ON COLUMN YMYX_APPLICATION.BASE_URL IS '基础地址';
COMMENT ON COLUMN YMYX_APPLICATION.TENANT IS '租户名称';
COMMENT ON COLUMN YMYX_APPLICATION.NOTES IS '备注';
COMMENT ON COLUMN YMYX_APPLICATION.CREATOR_ID IS '创建人ID';
COMMENT ON COLUMN YMYX_APPLICATION.CREATOR IS '创建人';
COMMENT ON COLUMN YMYX_APPLICATION.CREATE_TIME IS '创建时间';
COMMENT ON COLUMN YMYX_APPLICATION.IS_DEFAULT IS '是否默认1:可用0:不可用';

CREATE TABLE YMYX_TREE (
ID VARCHAR2(64) NOT NULL,
KEY VARCHAR2(64) DEFAULT NULL NULL,
NAME VARCHAR2(256) DEFAULT NULL NULL,
DESCRIPTION VARCHAR2(256) DEFAULT NULL NULL,
IS_SYSTEM NUMBER(4,0) DEFAULT NULL NULL,
PRIMARY KEY (ID)
);
CREATE UNIQUE INDEX IDX_YMYX_TREE_KEY ON YMYX_TREE (KEY);
COMMENT ON TABLE YMYX_TREE IS '系统树';
COMMENT ON COLUMN YMYX_TREE.ID IS '主键';
COMMENT ON COLUMN YMYX_TREE.KEY IS '别名';
COMMENT ON COLUMN YMYX_TREE.NAME IS '名字';
COMMENT ON COLUMN YMYX_TREE.DESCRIPTION IS '描述';
COMMENT ON COLUMN YMYX_TREE.IS_SYSTEM IS '是否系统内置树';

CREATE TABLE YMYX_TREE_NODE (
ID VARCHAR2(64) NOT NULL,
KEY VARCHAR2(64) DEFAULT NULL NULL,
NAME VARCHAR2(128) DEFAULT NULL NULL,
DESCRIPTION VARCHAR2(256) DEFAULT NULL NULL,
TREE_ID VARCHAR2(64) DEFAULT NULL NULL,
PARENT_ID VARCHAR2(64) DEFAULT NULL NULL,
PATH VARCHAR2(512) DEFAULT NULL NULL,
SEQ NUMBER(4,0) DEFAULT NULL NULL,
PRIMARY KEY (ID)
);
CREATE UNIQUE INDEX IDX_YMYX_TREE_NODE_KEY ON YMYX_TREE_NODE (KEY, TREE_ID);
COMMENT ON TABLE YMYX_TREE_NODE IS '系统树节点';
COMMENT ON COLUMN YMYX_TREE_NODE.ID IS '主键';
COMMENT ON COLUMN YMYX_TREE_NODE.KEY IS '别名';
COMMENT ON COLUMN YMYX_TREE_NODE.NAME IS '名字';
COMMENT ON COLUMN YMYX_TREE_NODE.DESCRIPTION IS '描述';
COMMENT ON COLUMN YMYX_TREE_NODE.TREE_ID IS '所属树ID';
COMMENT ON COLUMN YMYX_TREE_NODE.PARENT_ID IS '父ID';
COMMENT ON COLUMN YMYX_TREE_NODE.PATH IS '路径 EG:PPPID.PPID.PID';
COMMENT ON COLUMN YMYX_TREE_NODE.SEQ IS '排序号';

CREATE TABLE YMYX_WORKBENCH_LAYOUT (
ID VARCHAR2(64) NOT NULL,
PANEL_ID VARCHAR2(255) NOT NULL,
CUST_WIDTH NUMBER(11,0) DEFAULT NULL NULL,
CUST_HEIGHT NUMBER(11,0) DEFAULT NULL NULL,
SEQ NUMBER(11,0) DEFAULT NULL NULL,
USER_ID VARCHAR2(64) NOT NULL,
CREATE_TIME DATE DEFAULT NULL NULL,
PRIMARY KEY (ID)
);
CREATE INDEX IDX_WORKBENCH_LAYOUT_PANEL_ID ON YMYX_WORKBENCH_LAYOUT (PANEL_ID);
COMMENT ON TABLE YMYX_WORKBENCH_LAYOUT IS '工作台布局';
COMMENT ON COLUMN YMYX_WORKBENCH_LAYOUT.PANEL_ID IS '面板ID';
COMMENT ON COLUMN YMYX_WORKBENCH_LAYOUT.CUST_WIDTH IS '自定义宽';
COMMENT ON COLUMN YMYX_WORKBENCH_LAYOUT.CUST_HEIGHT IS '自定义高';
COMMENT ON COLUMN YMYX_WORKBENCH_LAYOUT.SEQ IS '排序';
COMMENT ON COLUMN YMYX_WORKBENCH_LAYOUT.USER_ID IS '用户ID';
COMMENT ON COLUMN YMYX_WORKBENCH_LAYOUT.CREATE_TIME IS '创建时间';

CREATE TABLE YMYX_WORKBENCH_PANEL (
ID VARCHAR2(64) NOT NULL,
ALIAS VARCHAR2(255) NOT NULL,
NAME VARCHAR2(255) DEFAULT '' NOT NULL,
TYPE VARCHAR2(64) DEFAULT NULL NULL,
DESCRIPTION VARCHAR2(500) DEFAULT NULL NULL,
DATA_TYPE VARCHAR2(64) DEFAULT NULL NULL,
DATA_SOURCE VARCHAR2(255) DEFAULT NULL NULL,
AUTO_REFRESH NUMBER(11,0) DEFAULT 0 NULL,
WIDTH NUMBER(11,0) DEFAULT NULL NULL,
HEIGHT NUMBER(11,0) DEFAULT NULL NULL,
DISPLAY_CONTENT CLOB DEFAULT NULL NULL,
MORE_URL VARCHAR2(255) DEFAULT NULL NULL,
CREATE_TIME DATE DEFAULT NULL NULL,
CREATE_BY VARCHAR2(64) DEFAULT NULL NULL,
UPDATE_TIME DATE DEFAULT NULL NULL,
UPDATE_BY VARCHAR2(64) DEFAULT NULL NULL,
DELETE_FLAG VARCHAR2(10) DEFAULT NULL NULL,
PRIMARY KEY (ID)
);
CREATE INDEX IDX_WORKBENCH_PANEL_ALIAS ON YMYX_WORKBENCH_PANEL (ALIAS);
COMMENT ON TABLE YMYX_WORKBENCH_PANEL IS '工作台面板';
COMMENT ON COLUMN YMYX_WORKBENCH_PANEL.ALIAS IS '标识';
COMMENT ON COLUMN YMYX_WORKBENCH_PANEL.NAME IS '名字';
COMMENT ON COLUMN YMYX_WORKBENCH_PANEL.TYPE IS '类型';
COMMENT ON COLUMN YMYX_WORKBENCH_PANEL.DESCRIPTION IS '描述';
COMMENT ON COLUMN YMYX_WORKBENCH_PANEL.DATA_TYPE IS '数据类型';
COMMENT ON COLUMN YMYX_WORKBENCH_PANEL.DATA_SOURCE IS '数据来源';
COMMENT ON COLUMN YMYX_WORKBENCH_PANEL.AUTO_REFRESH IS '自动刷新';
COMMENT ON COLUMN YMYX_WORKBENCH_PANEL.WIDTH IS '宽';
COMMENT ON COLUMN YMYX_WORKBENCH_PANEL.HEIGHT IS '高';
COMMENT ON COLUMN YMYX_WORKBENCH_PANEL.DISPLAY_CONTENT IS '展示内容';
COMMENT ON COLUMN YMYX_WORKBENCH_PANEL.MORE_URL IS '更多链接';

CREATE TABLE YMYX_WORKBENCH_PANEL_TEMPLATE (
ID VARCHAR2(64) NOT NULL,
KEY VARCHAR2(255) DEFAULT NULL NULL,
NAME VARCHAR2(255) DEFAULT NULL NULL,
DESCRIPTION VARCHAR2(500) DEFAULT NULL NULL,
HTML CLOB DEFAULT NULL NULL,
PRIMARY KEY (ID)
);
COMMENT ON TABLE YMYX_WORKBENCH_PANEL_TEMPLATE IS '工作台面板模板';
COMMENT ON COLUMN YMYX_WORKBENCH_PANEL_TEMPLATE.KEY IS '模板KEY';
COMMENT ON COLUMN YMYX_WORKBENCH_PANEL_TEMPLATE.DESCRIPTION IS '模板描述';
COMMENT ON COLUMN YMYX_WORKBENCH_PANEL_TEMPLATE.HTML IS '模板内容';

CREATE TABLE YMYX_DB_ID_GENERATOR (
ID VARCHAR2(64) NOT NULL,
START_VALUE NUMBER(11,0) NOT NULL,
MAXIMUM NUMBER(11,0) NOT NULL,
MACHINE VARCHAR2(255) NOT NULL,
PRIMARY KEY (ID)
);
COMMENT ON TABLE YMYX_DB_ID_GENERATOR IS '数据库ID增长表';
COMMENT ON COLUMN YMYX_DB_ID_GENERATOR.ID IS 'ID';
COMMENT ON COLUMN YMYX_DB_ID_GENERATOR.START_VALUE IS '开始ID值';
COMMENT ON COLUMN YMYX_DB_ID_GENERATOR.MAXIMUM IS '当前允许最大的ID值';
COMMENT ON COLUMN YMYX_DB_ID_GENERATOR.MACHINE IS '机器名称';


ALTER TABLE YMYX_GROUP_POSITION_LINK ADD CONSTRAINT FK_GRP_POST_LNK_REF_GROUP FOREIGN KEY (GROUP_ID) REFERENCES YMYX_GROUP (ID) ;
ALTER TABLE YMYX_GROUP_POSITION_LINK ADD CONSTRAINT FK_GRP_POST_LNK_REF_POST FOREIGN KEY (POSITION_ID) REFERENCES YMYX_POSITION (ID) ;
ALTER TABLE YMYX_GROUP_USER_LINK ADD CONSTRAINT FK_GRP_U_LNK_REF_ FOREIGN KEY (POSITION_ID) REFERENCES YMYX_GROUP_POSITION_LINK (ID) ;
ALTER TABLE YMYX_GROUP_USER_LINK ADD CONSTRAINT FK_GRP_U_LNK_REF_USERID FOREIGN KEY (USER_ID) REFERENCES YMYX_USER (ID) ;
ALTER TABLE YMYX_GROUP_USER_LINK ADD CONSTRAINT FK_GRP_U_LNK_REF_GROUPID FOREIGN KEY (GROUP_ID) REFERENCES YMYX_GROUP (ID) ;
ALTER TABLE YMYX_USER_ROLE_LINK ADD CONSTRAINT FK_USER_ROLE_REF_USERID FOREIGN KEY (USER_ID) REFERENCES YMYX_USER (ID) ;
ALTER TABLE YMYX_USER_ROLE_LINK ADD CONSTRAINT FK_USER_ROLE_REF_ROLEID FOREIGN KEY (ROLE_ID) REFERENCES YMYX_ROLE (ID);

---QUZRTZ建表语句
--
-- A HINT SUBMITTED BY A USER: ORACLE DB MUST BE CREATED AS "SHARED" AND THE
-- JOB_QUEUE_PROCESSES PARAMETER  MUST BE GREATER THAN 2
-- HOWEVER, THESE SETTINGS ARE PRETTY MUCH STANDARD AFTER ANY
-- ORACLE INSTALL, SO MOST USERS NEED NOT WORRY ABOUT THIS.
--
-- MANY OTHER USERS (INCLUDING THE PRIMARY AUTHOR OF QUARTZ) HAVE HAD SUCCESS
-- RUNING IN DEDICATED MODE, SO ONLY CONSIDER THE ABOVE AS A HINT ;-)
--

DELETE FROM QRTZ_FIRED_TRIGGERS;
DELETE FROM QRTZ_SIMPLE_TRIGGERS;
DELETE FROM QRTZ_SIMPROP_TRIGGERS;
DELETE FROM QRTZ_CRON_TRIGGERS;
DELETE FROM QRTZ_BLOB_TRIGGERS;
DELETE FROM QRTZ_TRIGGERS;
DELETE FROM QRTZ_JOB_DETAILS;
DELETE FROM QRTZ_CALENDARS;
DELETE FROM QRTZ_PAUSED_TRIGGER_GRPS;
DELETE FROM QRTZ_LOCKS;
DELETE FROM QRTZ_SCHEDULER_STATE;

DROP TABLE QRTZ_CALENDARS;
DROP TABLE QRTZ_FIRED_TRIGGERS;
DROP TABLE QRTZ_BLOB_TRIGGERS;
DROP TABLE QRTZ_CRON_TRIGGERS;
DROP TABLE QRTZ_SIMPLE_TRIGGERS;
DROP TABLE QRTZ_SIMPROP_TRIGGERS;
DROP TABLE QRTZ_TRIGGERS;
DROP TABLE QRTZ_JOB_DETAILS;
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
DROP TABLE QRTZ_LOCKS;
DROP TABLE QRTZ_SCHEDULER_STATE;


CREATE TABLE QRTZ_JOB_DETAILS
  (
    SCHED_NAME VARCHAR2(120) NOT NULL,
    JOB_NAME  VARCHAR2(200) NOT NULL,
    JOB_GROUP VARCHAR2(200) NOT NULL,
    DESCRIPTION VARCHAR2(250) NULL,
    JOB_CLASS_NAME   VARCHAR2(250) NOT NULL,
    IS_DURABLE VARCHAR2(1) NOT NULL,
    IS_NONCONCURRENT VARCHAR2(1) NOT NULL,
    IS_UPDATE_DATA VARCHAR2(1) NOT NULL,
    REQUESTS_RECOVERY VARCHAR2(1) NOT NULL,
    JOB_DATA BLOB NULL,
    CONSTRAINT QRTZ_JOB_DETAILS_PK PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
CREATE TABLE QRTZ_TRIGGERS
  (
    SCHED_NAME VARCHAR2(120) NOT NULL,
    TRIGGER_NAME VARCHAR2(200) NOT NULL,
    TRIGGER_GROUP VARCHAR2(200) NOT NULL,
    JOB_NAME  VARCHAR2(200) NOT NULL,
    JOB_GROUP VARCHAR2(200) NOT NULL,
    DESCRIPTION VARCHAR2(250) NULL,
    NEXT_FIRE_TIME NUMBER(13) NULL,
    PREV_FIRE_TIME NUMBER(13) NULL,
    PRIORITY NUMBER(13) NULL,
    TRIGGER_STATE VARCHAR2(16) NOT NULL,
    TRIGGER_TYPE VARCHAR2(8) NOT NULL,
    START_TIME NUMBER(13) NOT NULL,
    END_TIME NUMBER(13) NULL,
    CALENDAR_NAME VARCHAR2(200) NULL,
    MISFIRE_INSTR NUMBER(2) NULL,
    JOB_DATA BLOB NULL,
    CONSTRAINT QRTZ_TRIGGERS_PK PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    CONSTRAINT QRTZ_TRIGGER_TO_JOBS_FK FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
      REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP)
);
CREATE TABLE QRTZ_SIMPLE_TRIGGERS
  (
    SCHED_NAME VARCHAR2(120) NOT NULL,
    TRIGGER_NAME VARCHAR2(200) NOT NULL,
    TRIGGER_GROUP VARCHAR2(200) NOT NULL,
    REPEAT_COUNT NUMBER(7) NOT NULL,
    REPEAT_INTERVAL NUMBER(12) NOT NULL,
    TIMES_TRIGGERED NUMBER(10) NOT NULL,
    CONSTRAINT QRTZ_SIMPLE_TRIG_PK PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    CONSTRAINT QRTZ_SIMPLE_TRIG_TO_TRIG_FK FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
CREATE TABLE QRTZ_CRON_TRIGGERS
  (
    SCHED_NAME VARCHAR2(120) NOT NULL,
    TRIGGER_NAME VARCHAR2(200) NOT NULL,
    TRIGGER_GROUP VARCHAR2(200) NOT NULL,
    CRON_EXPRESSION VARCHAR2(120) NOT NULL,
    TIME_ZONE_ID VARCHAR2(80),
    CONSTRAINT QRTZ_CRON_TRIG_PK PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    CONSTRAINT QRTZ_CRON_TRIG_TO_TRIG_FK FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
      REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
CREATE TABLE QRTZ_SIMPROP_TRIGGERS
  (
    SCHED_NAME VARCHAR2(120) NOT NULL,
    TRIGGER_NAME VARCHAR2(200) NOT NULL,
    TRIGGER_GROUP VARCHAR2(200) NOT NULL,
    STR_PROP_1 VARCHAR2(512) NULL,
    STR_PROP_2 VARCHAR2(512) NULL,
    STR_PROP_3 VARCHAR2(512) NULL,
    INT_PROP_1 NUMBER(10) NULL,
    INT_PROP_2 NUMBER(10) NULL,
    LONG_PROP_1 NUMBER(13) NULL,
    LONG_PROP_2 NUMBER(13) NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 VARCHAR2(1) NULL,
    BOOL_PROP_2 VARCHAR2(1) NULL,
    CONSTRAINT QRTZ_SIMPROP_TRIG_PK PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    CONSTRAINT QRTZ_SIMPROP_TRIG_TO_TRIG_FK FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
      REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
CREATE TABLE QRTZ_BLOB_TRIGGERS
  (
    SCHED_NAME VARCHAR2(120) NOT NULL,
    TRIGGER_NAME VARCHAR2(200) NOT NULL,
    TRIGGER_GROUP VARCHAR2(200) NOT NULL,
    BLOB_DATA BLOB NULL,
    CONSTRAINT QRTZ_BLOB_TRIG_PK PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    CONSTRAINT QRTZ_BLOB_TRIG_TO_TRIG_FK FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
CREATE TABLE QRTZ_CALENDARS
  (
    SCHED_NAME VARCHAR2(120) NOT NULL,
    CALENDAR_NAME  VARCHAR2(200) NOT NULL,
    CALENDAR BLOB NOT NULL,
    CONSTRAINT QRTZ_CALENDARS_PK PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
CREATE TABLE QRTZ_PAUSED_TRIGGER_GRPS
  (
    SCHED_NAME VARCHAR2(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR2(200) NOT NULL,
    CONSTRAINT QRTZ_PAUSED_TRIG_GRPS_PK PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
CREATE TABLE QRTZ_FIRED_TRIGGERS
  (
    SCHED_NAME VARCHAR2(120) NOT NULL,
    ENTRY_ID VARCHAR2(95) NOT NULL,
    TRIGGER_NAME VARCHAR2(200) NOT NULL,
    TRIGGER_GROUP VARCHAR2(200) NOT NULL,
    INSTANCE_NAME VARCHAR2(200) NOT NULL,
    FIRED_TIME NUMBER(13) NOT NULL,
    SCHED_TIME NUMBER(13) NOT NULL,
    PRIORITY NUMBER(13) NOT NULL,
    STATE VARCHAR2(16) NOT NULL,
    JOB_NAME VARCHAR2(200) NULL,
    JOB_GROUP VARCHAR2(200) NULL,
    IS_NONCONCURRENT VARCHAR2(1) NULL,
    REQUESTS_RECOVERY VARCHAR2(1) NULL,
    CONSTRAINT QRTZ_FIRED_TRIGGER_PK PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
CREATE TABLE QRTZ_SCHEDULER_STATE
  (
    SCHED_NAME VARCHAR2(120) NOT NULL,
    INSTANCE_NAME VARCHAR2(200) NOT NULL,
    LAST_CHECKIN_TIME NUMBER(13) NOT NULL,
    CHECKIN_INTERVAL NUMBER(13) NOT NULL,
    CONSTRAINT QRTZ_SCHEDULER_STATE_PK PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
CREATE TABLE QRTZ_LOCKS
  (
    SCHED_NAME VARCHAR2(120) NOT NULL,
    LOCK_NAME  VARCHAR2(40) NOT NULL,
    CONSTRAINT QRTZ_LOCKS_PK PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);

CREATE INDEX IDX_QRTZ_J_REQ_RECOVERY ON QRTZ_JOB_DETAILS(SCHED_NAME,REQUESTS_RECOVERY);
CREATE INDEX IDX_QRTZ_J_GRP ON QRTZ_JOB_DETAILS(SCHED_NAME,JOB_GROUP);

CREATE INDEX IDX_QRTZ_T_J ON QRTZ_TRIGGERS(SCHED_NAME,JOB_NAME,JOB_GROUP);
CREATE INDEX IDX_QRTZ_T_JG ON QRTZ_TRIGGERS(SCHED_NAME,JOB_GROUP);
CREATE INDEX IDX_QRTZ_T_C ON QRTZ_TRIGGERS(SCHED_NAME,CALENDAR_NAME);
CREATE INDEX IDX_QRTZ_T_G ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_GROUP);
CREATE INDEX IDX_QRTZ_T_STATE ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_STATE);
CREATE INDEX IDX_QRTZ_T_N_STATE ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
CREATE INDEX IDX_QRTZ_T_N_G_STATE ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
CREATE INDEX IDX_QRTZ_T_NEXT_FIRE_TIME ON QRTZ_TRIGGERS(SCHED_NAME,NEXT_FIRE_TIME);
CREATE INDEX IDX_QRTZ_T_NFT_ST ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
CREATE INDEX IDX_QRTZ_T_NFT_MISFIRE ON QRTZ_TRIGGERS(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
CREATE INDEX IDX_QRTZ_T_NFT_ST_MISFIRE ON QRTZ_TRIGGERS(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
CREATE INDEX IDX_QRTZ_T_NFT_ST_MISFIRE_GRP ON QRTZ_TRIGGERS(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);

CREATE INDEX IDX_QRTZ_FT_TRIG_INST_NAME ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,INSTANCE_NAME);
CREATE INDEX IDX_QRTZ_FT_INST_JOB_REQ_RCVRY ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
CREATE INDEX IDX_QRTZ_FT_J_G ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,JOB_NAME,JOB_GROUP);
CREATE INDEX IDX_QRTZ_FT_JG ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,JOB_GROUP);
CREATE INDEX IDX_QRTZ_FT_T_G ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
CREATE INDEX IDX_QRTZ_FT_TG ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,TRIGGER_GROUP);






----flowable工作流建表语句
create table ACT_GE_PROPERTY (
    NAME_ NVARCHAR2(64),
    VALUE_ NVARCHAR2(300),
    REV_ INTEGER,
    primary key (NAME_)
);

create table ACT_GE_BYTEARRAY (
    ID_ NVARCHAR2(64),
    REV_ INTEGER,
    NAME_ NVARCHAR2(255),
    DEPLOYMENT_ID_ NVARCHAR2(64),
    BYTES_ BLOB,
    GENERATED_ NUMBER(1,0) CHECK (GENERATED_ IN (1,0)),
    primary key (ID_)
);

insert into ACT_GE_PROPERTY
values ('common.schema.version', '6.3.1.0', 1);

insert into ACT_GE_PROPERTY
values ('next.dbid', '1', 1);

create table ACT_RU_IDENTITYLINK (
    ID_ NVARCHAR2(64),
    REV_ INTEGER,
    GROUP_ID_ NVARCHAR2(255),
    TYPE_ NVARCHAR2(255),
    USER_ID_ NVARCHAR2(255),
    TASK_ID_ NVARCHAR2(64),
    PROC_INST_ID_ NVARCHAR2(64),
    PROC_DEF_ID_ NVARCHAR2(64),
    SCOPE_ID_ NVARCHAR2(255),
    SCOPE_TYPE_ NVARCHAR2(255),
    SCOPE_DEFINITION_ID_ NVARCHAR2(255),
    primary key (ID_)
);

create index ACT_IDX_IDENT_LNK_USER on ACT_RU_IDENTITYLINK(USER_ID_);
create index ACT_IDX_IDENT_LNK_GROUP on ACT_RU_IDENTITYLINK(GROUP_ID_);
create index ACT_IDX_IDENT_LNK_SCOPE on ACT_RU_IDENTITYLINK(SCOPE_ID_, SCOPE_TYPE_);
create index ACT_IDX_IDENT_LNK_SCOPE_DEF on ACT_RU_IDENTITYLINK(SCOPE_DEFINITION_ID_, SCOPE_TYPE_);

insert into ACT_GE_PROPERTY values ('identitylink.schema.version', '6.3.1.0', 1);
create table ACT_RU_TASK (
    ID_ NVARCHAR2(64),
    REV_ INTEGER,
    EXECUTION_ID_ NVARCHAR2(64),
    PROC_INST_ID_ NVARCHAR2(64),
    PROC_DEF_ID_ NVARCHAR2(64),
    TASK_DEF_ID_ NVARCHAR2(64),
    SCOPE_ID_ NVARCHAR2(255),
    SUB_SCOPE_ID_ NVARCHAR2(255),
    SCOPE_TYPE_ NVARCHAR2(255),
    SCOPE_DEFINITION_ID_ NVARCHAR2(255),
    NAME_ NVARCHAR2(255),
    PARENT_TASK_ID_ NVARCHAR2(64),
    DESCRIPTION_ NVARCHAR2(2000),
    TASK_DEF_KEY_ NVARCHAR2(255),
    OWNER_ NVARCHAR2(255),
    ASSIGNEE_ NVARCHAR2(255),
    DELEGATION_ NVARCHAR2(64),
    PRIORITY_ INTEGER,
    CREATE_TIME_ TIMESTAMP(6),
    DUE_DATE_ TIMESTAMP(6),
    CATEGORY_ NVARCHAR2(255),
    SUSPENSION_STATE_ INTEGER,
    TENANT_ID_ NVARCHAR2(255) DEFAULT '',
    FORM_KEY_ NVARCHAR2(255),
    CLAIM_TIME_ TIMESTAMP(6),
    IS_COUNT_ENABLED_ NUMBER(1,0) CHECK (IS_COUNT_ENABLED_ IN (1,0)),
    VAR_COUNT_ INTEGER,
    ID_LINK_COUNT_ INTEGER,
    SUB_TASK_COUNT_ INTEGER,
    primary key (ID_)
);

create index ACT_IDX_TASK_CREATE on ACT_RU_TASK(CREATE_TIME_);
create index ACT_IDX_TASK_SCOPE on ACT_RU_TASK(SCOPE_ID_, SCOPE_TYPE_);
create index ACT_IDX_TASK_SUB_SCOPE on ACT_RU_TASK(SUB_SCOPE_ID_, SCOPE_TYPE_);
create index ACT_IDX_TASK_SCOPE_DEF on ACT_RU_TASK(SCOPE_DEFINITION_ID_, SCOPE_TYPE_);

insert into ACT_GE_PROPERTY values ('task.schema.version', '6.3.1.0', 1);
create table ACT_RU_VARIABLE (
    ID_ NVARCHAR2(64) not null,
    REV_ INTEGER,
    TYPE_ NVARCHAR2(255) not null,
    NAME_ NVARCHAR2(255) not null,
    EXECUTION_ID_ NVARCHAR2(64),
    PROC_INST_ID_ NVARCHAR2(64),
    TASK_ID_ NVARCHAR2(64),
    SCOPE_ID_ NVARCHAR2(255),
    SUB_SCOPE_ID_ NVARCHAR2(255),
    SCOPE_TYPE_ NVARCHAR2(255),
    BYTEARRAY_ID_ NVARCHAR2(64),
    DOUBLE_ NUMBER(*,10),
    LONG_ NUMBER(19,0),
    TEXT_ NVARCHAR2(2000),
    TEXT2_ NVARCHAR2(2000),
    primary key (ID_)
);

create index ACT_IDX_RU_VAR_SCOPE_ID_TYPE on ACT_RU_VARIABLE(SCOPE_ID_, SCOPE_TYPE_);
create index ACT_IDX_RU_VAR_SUB_ID_TYPE on ACT_RU_VARIABLE(SUB_SCOPE_ID_, SCOPE_TYPE_);

create index ACT_IDX_VAR_BYTEARRAY on ACT_RU_VARIABLE(BYTEARRAY_ID_);
alter table ACT_RU_VARIABLE
    add constraint ACT_FK_VAR_BYTEARRAY
    foreign key (BYTEARRAY_ID_)
    references ACT_GE_BYTEARRAY (ID_);

insert into ACT_GE_PROPERTY values ('variable.schema.version', '6.3.1.0', 1);
create table ACT_RU_JOB (
    ID_ NVARCHAR2(64) NOT NULL,
    REV_ INTEGER,
    TYPE_ NVARCHAR2(255) NOT NULL,
    LOCK_EXP_TIME_ TIMESTAMP(6),
    LOCK_OWNER_ NVARCHAR2(255),
    EXCLUSIVE_ NUMBER(1,0) CHECK (EXCLUSIVE_ IN (1,0)),
    EXECUTION_ID_ NVARCHAR2(64),
    PROCESS_INSTANCE_ID_ NVARCHAR2(64),
    PROC_DEF_ID_ NVARCHAR2(64),
    SCOPE_ID_ NVARCHAR2(255),
    SUB_SCOPE_ID_ NVARCHAR2(255),
    SCOPE_TYPE_ NVARCHAR2(255),
    SCOPE_DEFINITION_ID_ NVARCHAR2(255),
    RETRIES_ INTEGER,
    EXCEPTION_STACK_ID_ NVARCHAR2(64),
    EXCEPTION_MSG_ NVARCHAR2(2000),
    DUEDATE_ TIMESTAMP(6),
    REPEAT_ NVARCHAR2(255),
    HANDLER_TYPE_ NVARCHAR2(255),
    HANDLER_CFG_ NVARCHAR2(2000),
    CUSTOM_VALUES_ID_ NVARCHAR2(64),
    CREATE_TIME_ TIMESTAMP(6),
    TENANT_ID_ NVARCHAR2(255) DEFAULT '',
    primary key (ID_)
);

create table ACT_RU_TIMER_JOB (
    ID_ NVARCHAR2(64) NOT NULL,
    REV_ INTEGER,
    TYPE_ NVARCHAR2(255) NOT NULL,
    LOCK_EXP_TIME_ TIMESTAMP(6),
    LOCK_OWNER_ NVARCHAR2(255),
    EXCLUSIVE_ NUMBER(1,0) CHECK (EXCLUSIVE_ IN (1,0)),
    EXECUTION_ID_ NVARCHAR2(64),
    PROCESS_INSTANCE_ID_ NVARCHAR2(64),
    PROC_DEF_ID_ NVARCHAR2(64),
    SCOPE_ID_ NVARCHAR2(255),
    SUB_SCOPE_ID_ NVARCHAR2(255),
    SCOPE_TYPE_ NVARCHAR2(255),
    SCOPE_DEFINITION_ID_ NVARCHAR2(255),
    RETRIES_ INTEGER,
    EXCEPTION_STACK_ID_ NVARCHAR2(64),
    EXCEPTION_MSG_ NVARCHAR2(2000),
    DUEDATE_ TIMESTAMP(6),
    REPEAT_ NVARCHAR2(255),
    HANDLER_TYPE_ NVARCHAR2(255),
    HANDLER_CFG_ NVARCHAR2(2000),
    CUSTOM_VALUES_ID_ NVARCHAR2(64),
    CREATE_TIME_ TIMESTAMP(6),
    TENANT_ID_ NVARCHAR2(255) DEFAULT '',
    primary key (ID_)
);

create table ACT_RU_SUSPENDED_JOB (
    ID_ NVARCHAR2(64) NOT NULL,
    REV_ INTEGER,
    TYPE_ NVARCHAR2(255) NOT NULL,
    EXCLUSIVE_ NUMBER(1,0) CHECK (EXCLUSIVE_ IN (1,0)),
    EXECUTION_ID_ NVARCHAR2(64),
    PROCESS_INSTANCE_ID_ NVARCHAR2(64),
    PROC_DEF_ID_ NVARCHAR2(64),
    SCOPE_ID_ NVARCHAR2(255),
    SUB_SCOPE_ID_ NVARCHAR2(255),
    SCOPE_TYPE_ NVARCHAR2(255),
    SCOPE_DEFINITION_ID_ NVARCHAR2(255),
    RETRIES_ INTEGER,
    EXCEPTION_STACK_ID_ NVARCHAR2(64),
    EXCEPTION_MSG_ NVARCHAR2(2000),
    DUEDATE_ TIMESTAMP(6),
    REPEAT_ NVARCHAR2(255),
    HANDLER_TYPE_ NVARCHAR2(255),
    HANDLER_CFG_ NVARCHAR2(2000),
    CUSTOM_VALUES_ID_ NVARCHAR2(64),
    CREATE_TIME_ TIMESTAMP(6),
    TENANT_ID_ NVARCHAR2(255) DEFAULT '',
    primary key (ID_)
);

create table ACT_RU_DEADLETTER_JOB (
    ID_ NVARCHAR2(64) NOT NULL,
    REV_ INTEGER,
    TYPE_ NVARCHAR2(255) NOT NULL,
    EXCLUSIVE_ NUMBER(1,0) CHECK (EXCLUSIVE_ IN (1,0)),
    EXECUTION_ID_ NVARCHAR2(64),
    PROCESS_INSTANCE_ID_ NVARCHAR2(64),
    PROC_DEF_ID_ NVARCHAR2(64),
    SCOPE_ID_ NVARCHAR2(255),
    SUB_SCOPE_ID_ NVARCHAR2(255),
    SCOPE_TYPE_ NVARCHAR2(255),
    SCOPE_DEFINITION_ID_ NVARCHAR2(255),
    EXCEPTION_STACK_ID_ NVARCHAR2(64),
    EXCEPTION_MSG_ NVARCHAR2(2000),
    DUEDATE_ TIMESTAMP(6),
    REPEAT_ NVARCHAR2(255),
    HANDLER_TYPE_ NVARCHAR2(255),
    HANDLER_CFG_ NVARCHAR2(2000),
    CUSTOM_VALUES_ID_ NVARCHAR2(64),
    CREATE_TIME_ TIMESTAMP(6),
    TENANT_ID_ NVARCHAR2(255) DEFAULT '',
    primary key (ID_)
);

create table ACT_RU_HISTORY_JOB (
    ID_ NVARCHAR2(64) NOT NULL,
    REV_ INTEGER,
    LOCK_EXP_TIME_ TIMESTAMP(6),
    LOCK_OWNER_ NVARCHAR2(255),
    RETRIES_ INTEGER,
    EXCEPTION_STACK_ID_ NVARCHAR2(64),
    EXCEPTION_MSG_ NVARCHAR2(2000),
    HANDLER_TYPE_ NVARCHAR2(255),
    HANDLER_CFG_ NVARCHAR2(2000),
    CUSTOM_VALUES_ID_ NVARCHAR2(64),
    ADV_HANDLER_CFG_ID_ NVARCHAR2(64),
    CREATE_TIME_ TIMESTAMP(6),
    SCOPE_TYPE_ NVARCHAR2(255),
    TENANT_ID_ NVARCHAR2(255) DEFAULT '',
    primary key (ID_)
);

create index ACT_IDX_JOB_EXCEPTION on ACT_RU_JOB(EXCEPTION_STACK_ID_);
create index ACT_IDX_JOB_CUSTOM_VAL_ID on ACT_RU_JOB(CUSTOM_VALUES_ID_);

create index ACT_IDX_TJOB_EXCEPTION on ACT_RU_TIMER_JOB(EXCEPTION_STACK_ID_);
create index ACT_IDX_TJOB_CUSTOM_VAL_ID on ACT_RU_TIMER_JOB(CUSTOM_VALUES_ID_);

create index ACT_IDX_SJOB_EXCEPTION on ACT_RU_SUSPENDED_JOB(EXCEPTION_STACK_ID_);
create index ACT_IDX_SJOB_CUSTOM_VAL_ID on ACT_RU_SUSPENDED_JOB(CUSTOM_VALUES_ID_);

create index ACT_IDX_DJOB_EXCEPTION on ACT_RU_DEADLETTER_JOB(EXCEPTION_STACK_ID_);
create index ACT_IDX_DJOB_CUSTOM_VAL_ID on ACT_RU_DEADLETTER_JOB(CUSTOM_VALUES_ID_);

alter table ACT_RU_JOB
    add constraint ACT_FK_JOB_EXCEPTION
    foreign key (EXCEPTION_STACK_ID_)
    references ACT_GE_BYTEARRAY (ID_);

alter table ACT_RU_JOB
    add constraint ACT_FK_JOB_CUSTOM_VAL
    foreign key (CUSTOM_VALUES_ID_)
    references ACT_GE_BYTEARRAY (ID_);

alter table ACT_RU_TIMER_JOB
    add constraint ACT_FK_TJOB_EXCEPTION
    foreign key (EXCEPTION_STACK_ID_)
    references ACT_GE_BYTEARRAY (ID_);

alter table ACT_RU_TIMER_JOB
    add constraint ACT_FK_TJOB_CUSTOM_VAL
    foreign key (CUSTOM_VALUES_ID_)
    references ACT_GE_BYTEARRAY (ID_);

alter table ACT_RU_SUSPENDED_JOB
    add constraint ACT_FK_SJOB_EXCEPTION
    foreign key (EXCEPTION_STACK_ID_)
    references ACT_GE_BYTEARRAY (ID_);

alter table ACT_RU_SUSPENDED_JOB
    add constraint ACT_FK_SJOB_CUSTOM_VAL
    foreign key (CUSTOM_VALUES_ID_)
    references ACT_GE_BYTEARRAY (ID_);

alter table ACT_RU_DEADLETTER_JOB
    add constraint ACT_FK_DJOB_EXCEPTION
    foreign key (EXCEPTION_STACK_ID_)
    references ACT_GE_BYTEARRAY (ID_);

alter table ACT_RU_DEADLETTER_JOB
    add constraint ACT_FK_DJOB_CUSTOM_VAL
    foreign key (CUSTOM_VALUES_ID_)
    references ACT_GE_BYTEARRAY (ID_);

create index ACT_IDX_JOB_SCOPE on ACT_RU_JOB(SCOPE_ID_, SCOPE_TYPE_);
create index ACT_IDX_JOB_SUB_SCOPE on ACT_RU_JOB(SUB_SCOPE_ID_, SCOPE_TYPE_);
create index ACT_IDX_JOB_SCOPE_DEF on ACT_RU_JOB(SCOPE_DEFINITION_ID_, SCOPE_TYPE_);

create index ACT_IDX_TJOB_SCOPE on ACT_RU_TIMER_JOB(SCOPE_ID_, SCOPE_TYPE_);
create index ACT_IDX_TJOB_SUB_SCOPE on ACT_RU_TIMER_JOB(SUB_SCOPE_ID_, SCOPE_TYPE_);
create index ACT_IDX_TJOB_SCOPE_DEF on ACT_RU_TIMER_JOB(SCOPE_DEFINITION_ID_, SCOPE_TYPE_);

create index ACT_IDX_SJOB_SCOPE on ACT_RU_SUSPENDED_JOB(SCOPE_ID_, SCOPE_TYPE_);
create index ACT_IDX_SJOB_SUB_SCOPE on ACT_RU_SUSPENDED_JOB(SUB_SCOPE_ID_, SCOPE_TYPE_);
create index ACT_IDX_SJOB_SCOPE_DEF on ACT_RU_SUSPENDED_JOB(SCOPE_DEFINITION_ID_, SCOPE_TYPE_);

create index ACT_IDX_DJOB_SCOPE on ACT_RU_DEADLETTER_JOB(SCOPE_ID_, SCOPE_TYPE_);
create index ACT_IDX_DJOB_SUB_SCOPE on ACT_RU_DEADLETTER_JOB(SUB_SCOPE_ID_, SCOPE_TYPE_);
create index ACT_IDX_DJOB_SCOPE_DEF on ACT_RU_DEADLETTER_JOB(SCOPE_DEFINITION_ID_, SCOPE_TYPE_);

insert into ACT_GE_PROPERTY values ('job.schema.version', '6.3.1.0', 1);
create table ACT_RE_DEPLOYMENT (
    ID_ NVARCHAR2(64),
    NAME_ NVARCHAR2(255),
    CATEGORY_ NVARCHAR2(255),
    KEY_ NVARCHAR2(255),
    TENANT_ID_ NVARCHAR2(255) DEFAULT '',
    DEPLOY_TIME_ TIMESTAMP(6),
    DERIVED_FROM_ NVARCHAR2(64),
    DERIVED_FROM_ROOT_ NVARCHAR2(64),
    PARENT_DEPLOYMENT_ID_ NVARCHAR2(255),
    ENGINE_VERSION_ NVARCHAR2(255),
    primary key (ID_)
);

create table ACT_RE_MODEL (
    ID_ NVARCHAR2(64) not null,
    REV_ INTEGER,
    NAME_ NVARCHAR2(255),
    KEY_ NVARCHAR2(255),
    CATEGORY_ NVARCHAR2(255),
    CREATE_TIME_ TIMESTAMP(6),
    LAST_UPDATE_TIME_ TIMESTAMP(6),
    VERSION_ INTEGER,
    META_INFO_ NVARCHAR2(2000),
    DEPLOYMENT_ID_ NVARCHAR2(64),
    EDITOR_SOURCE_VALUE_ID_ NVARCHAR2(64),
    EDITOR_SOURCE_EXTRA_VALUE_ID_ NVARCHAR2(64),
    TENANT_ID_ NVARCHAR2(255) DEFAULT '',
    primary key (ID_)
);

create table ACT_RU_EXECUTION (
    ID_ NVARCHAR2(64),
    REV_ INTEGER,
    PROC_INST_ID_ NVARCHAR2(64),
    BUSINESS_KEY_ NVARCHAR2(255),
    PARENT_ID_ NVARCHAR2(64),
    PROC_DEF_ID_ NVARCHAR2(64),
    SUPER_EXEC_ NVARCHAR2(64),
    ROOT_PROC_INST_ID_ NVARCHAR2(64),
    ACT_ID_ NVARCHAR2(255),
    IS_ACTIVE_ NUMBER(1,0) CHECK (IS_ACTIVE_ IN (1,0)),
    IS_CONCURRENT_ NUMBER(1,0) CHECK (IS_CONCURRENT_ IN (1,0)),
    IS_SCOPE_ NUMBER(1,0) CHECK (IS_SCOPE_ IN (1,0)),
    IS_EVENT_SCOPE_ NUMBER(1,0) CHECK (IS_EVENT_SCOPE_ IN (1,0)),
    IS_MI_ROOT_ NUMBER(1,0) CHECK (IS_MI_ROOT_ IN (1,0)),
    SUSPENSION_STATE_ INTEGER,
    CACHED_ENT_STATE_ INTEGER,
    TENANT_ID_ NVARCHAR2(255) DEFAULT '',
    NAME_ NVARCHAR2(255),
    START_ACT_ID_ NVARCHAR2(255),
    START_TIME_ TIMESTAMP(6),
    START_USER_ID_ NVARCHAR2(255),
    LOCK_TIME_ TIMESTAMP(6),
    IS_COUNT_ENABLED_ NUMBER(1,0) CHECK (IS_COUNT_ENABLED_ IN (1,0)),
    EVT_SUBSCR_COUNT_ INTEGER,
    TASK_COUNT_ INTEGER,
    JOB_COUNT_ INTEGER,
    TIMER_JOB_COUNT_ INTEGER,
    SUSP_JOB_COUNT_ INTEGER,
    DEADLETTER_JOB_COUNT_ INTEGER,
    VAR_COUNT_ INTEGER,
    ID_LINK_COUNT_ INTEGER,
    CALLBACK_ID_ NVARCHAR2(255),
    CALLBACK_TYPE_ NVARCHAR2(255),
    primary key (ID_)
);

create table ACT_RE_PROCDEF (
    ID_ NVARCHAR2(64) NOT NULL,
    REV_ INTEGER,
    CATEGORY_ NVARCHAR2(255),
    NAME_ NVARCHAR2(255),
    KEY_ NVARCHAR2(255) NOT NULL,
    VERSION_ INTEGER NOT NULL,
    DEPLOYMENT_ID_ NVARCHAR2(64),
    RESOURCE_NAME_ NVARCHAR2(2000),
    DGRM_RESOURCE_NAME_ varchar(4000),
    DESCRIPTION_ NVARCHAR2(2000),
    HAS_START_FORM_KEY_ NUMBER(1,0) CHECK (HAS_START_FORM_KEY_ IN (1,0)),
    HAS_GRAPHICAL_NOTATION_ NUMBER(1,0) CHECK (HAS_GRAPHICAL_NOTATION_ IN (1,0)),
    SUSPENSION_STATE_ INTEGER,
    TENANT_ID_ NVARCHAR2(255) DEFAULT '',
    DERIVED_FROM_ NVARCHAR2(64),
    DERIVED_FROM_ROOT_ NVARCHAR2(64),
    DERIVED_VERSION_ INTEGER DEFAULT 0 NOT NULL,
    ENGINE_VERSION_ NVARCHAR2(255),
    primary key (ID_)
);

create table ACT_RU_EVENT_SUBSCR (
    ID_ NVARCHAR2(64) not null,
    REV_ integer,
    EVENT_TYPE_ NVARCHAR2(255) not null,
    EVENT_NAME_ NVARCHAR2(255),
    EXECUTION_ID_ NVARCHAR2(64),
    PROC_INST_ID_ NVARCHAR2(64),
    ACTIVITY_ID_ NVARCHAR2(64),
    CONFIGURATION_ NVARCHAR2(255),
    CREATED_ TIMESTAMP(6) not null,
    PROC_DEF_ID_ NVARCHAR2(64),
    TENANT_ID_ NVARCHAR2(255) DEFAULT '',
    primary key (ID_)
);

create table ACT_EVT_LOG (
    LOG_NR_ NUMBER(19),
    TYPE_ NVARCHAR2(64),
    PROC_DEF_ID_ NVARCHAR2(64),
    PROC_INST_ID_ NVARCHAR2(64),
    EXECUTION_ID_ NVARCHAR2(64),
    TASK_ID_ NVARCHAR2(64),
    TIME_STAMP_ TIMESTAMP(6) not null,
    USER_ID_ NVARCHAR2(255),
    DATA_ BLOB,
    LOCK_OWNER_ NVARCHAR2(255),
    LOCK_TIME_ TIMESTAMP(6) null,
    IS_PROCESSED_ NUMBER(3) default 0,
    primary key (LOG_NR_)
);

create sequence act_evt_log_seq;

create table ACT_PROCDEF_INFO (
	ID_ NVARCHAR2(64) not null,
    PROC_DEF_ID_ NVARCHAR2(64) not null,
    REV_ integer,
    INFO_JSON_ID_ NVARCHAR2(64),
    primary key (ID_)
);

create index ACT_IDX_EXEC_BUSKEY on ACT_RU_EXECUTION(BUSINESS_KEY_);
create index ACT_IDX_EXEC_ROOT on ACT_RU_EXECUTION(ROOT_PROC_INST_ID_);
create index ACT_IDX_EVENT_SUBSCR_CONFIG_ on ACT_RU_EVENT_SUBSCR(CONFIGURATION_);
create index ACT_IDX_VARIABLE_TASK_ID on ACT_RU_VARIABLE(TASK_ID_);

create index ACT_IDX_BYTEAR_DEPL on ACT_GE_BYTEARRAY(DEPLOYMENT_ID_);
alter table ACT_GE_BYTEARRAY
    add constraint ACT_FK_BYTEARR_DEPL
    foreign key (DEPLOYMENT_ID_)
    references ACT_RE_DEPLOYMENT (ID_);

alter table ACT_RE_PROCDEF
    add constraint ACT_UNIQ_PROCDEF
    unique (KEY_,VERSION_, DERIVED_VERSION_, TENANT_ID_);

create index ACT_IDX_EXE_PROCINST on ACT_RU_EXECUTION(PROC_INST_ID_);
alter table ACT_RU_EXECUTION
    add constraint ACT_FK_EXE_PROCINST
    foreign key (PROC_INST_ID_)
    references ACT_RU_EXECUTION (ID_);

create index ACT_IDX_EXE_PARENT on ACT_RU_EXECUTION(PARENT_ID_);
alter table ACT_RU_EXECUTION
    add constraint ACT_FK_EXE_PARENT
    foreign key (PARENT_ID_)
    references ACT_RU_EXECUTION (ID_);

create index ACT_IDX_EXE_SUPER on ACT_RU_EXECUTION(SUPER_EXEC_);
alter table ACT_RU_EXECUTION
    add constraint ACT_FK_EXE_SUPER
    foreign key (SUPER_EXEC_)
    references ACT_RU_EXECUTION (ID_);

create index ACT_IDX_EXE_PROCDEF on ACT_RU_EXECUTION(PROC_DEF_ID_);
alter table ACT_RU_EXECUTION
    add constraint ACT_FK_EXE_PROCDEF
    foreign key (PROC_DEF_ID_)
    references ACT_RE_PROCDEF (ID_);

create index ACT_IDX_TSKASS_TASK on ACT_RU_IDENTITYLINK(TASK_ID_);
alter table ACT_RU_IDENTITYLINK
    add constraint ACT_FK_TSKASS_TASK
    foreign key (TASK_ID_)
    references ACT_RU_TASK (ID_);

create index ACT_IDX_ATHRZ_PROCEDEF  on ACT_RU_IDENTITYLINK(PROC_DEF_ID_);
alter table ACT_RU_IDENTITYLINK
    add constraint ACT_FK_ATHRZ_PROCEDEF
    foreign key (PROC_DEF_ID_)
    references ACT_RE_PROCDEF (ID_);

create index ACT_IDX_IDL_PROCINST on ACT_RU_IDENTITYLINK(PROC_INST_ID_);
alter table ACT_RU_IDENTITYLINK
    add constraint ACT_FK_IDL_PROCINST
    foreign key (PROC_INST_ID_)
    references ACT_RU_EXECUTION (ID_);

create index ACT_IDX_TASK_EXEC on ACT_RU_TASK(EXECUTION_ID_);
alter table ACT_RU_TASK
    add constraint ACT_FK_TASK_EXE
    foreign key (EXECUTION_ID_)
    references ACT_RU_EXECUTION (ID_);

create index ACT_IDX_TASK_PROCINST on ACT_RU_TASK(PROC_INST_ID_);
alter table ACT_RU_TASK
    add constraint ACT_FK_TASK_PROCINST
    foreign key (PROC_INST_ID_)
    references ACT_RU_EXECUTION (ID_);

create index ACT_IDX_TASK_PROCDEF on ACT_RU_TASK(PROC_DEF_ID_);
alter table ACT_RU_TASK
  add constraint ACT_FK_TASK_PROCDEF
  foreign key (PROC_DEF_ID_)
  references ACT_RE_PROCDEF (ID_);

create index ACT_IDX_VAR_EXE on ACT_RU_VARIABLE(EXECUTION_ID_);
alter table ACT_RU_VARIABLE
    add constraint ACT_FK_VAR_EXE
    foreign key (EXECUTION_ID_)
    references ACT_RU_EXECUTION (ID_);

create index ACT_IDX_VAR_PROCINST on ACT_RU_VARIABLE(PROC_INST_ID_);
alter table ACT_RU_VARIABLE
    add constraint ACT_FK_VAR_PROCINST
    foreign key (PROC_INST_ID_)
    references ACT_RU_EXECUTION(ID_);

create index ACT_IDX_JOB_EXECUTION_ID on ACT_RU_JOB(EXECUTION_ID_);
alter table ACT_RU_JOB
    add constraint ACT_FK_JOB_EXECUTION
    foreign key (EXECUTION_ID_)
    references ACT_RU_EXECUTION (ID_);

create index ACT_IDX_JOB_PROC_INST_ID on ACT_RU_JOB(PROCESS_INSTANCE_ID_);
alter table ACT_RU_JOB
    add constraint ACT_FK_JOB_PROCESS_INSTANCE
    foreign key (PROCESS_INSTANCE_ID_)
    references ACT_RU_EXECUTION (ID_);

create index ACT_IDX_JOB_PROC_DEF_ID on ACT_RU_JOB(PROC_DEF_ID_);
alter table ACT_RU_JOB
    add constraint ACT_FK_JOB_PROC_DEF
    foreign key (PROC_DEF_ID_)
    references ACT_RE_PROCDEF (ID_);

create index ACT_IDX_TJOB_EXECUTION_ID on ACT_RU_TIMER_JOB(EXECUTION_ID_);
alter table ACT_RU_TIMER_JOB
    add constraint ACT_FK_TJOB_EXECUTION
    foreign key (EXECUTION_ID_)
    references ACT_RU_EXECUTION (ID_);

create index ACT_IDX_TJOB_PROC_INST_ID on ACT_RU_TIMER_JOB(PROCESS_INSTANCE_ID_);
alter table ACT_RU_TIMER_JOB
    add constraint ACT_FK_TJOB_PROCESS_INSTANCE
    foreign key (PROCESS_INSTANCE_ID_)
    references ACT_RU_EXECUTION (ID_);

create index ACT_IDX_TJOB_PROC_DEF_ID on ACT_RU_TIMER_JOB(PROC_DEF_ID_);
alter table ACT_RU_TIMER_JOB
    add constraint ACT_FK_TJOB_PROC_DEF
    foreign key (PROC_DEF_ID_)
    references ACT_RE_PROCDEF (ID_);

create index ACT_IDX_SJOB_EXECUTION_ID on ACT_RU_SUSPENDED_JOB(EXECUTION_ID_);
alter table ACT_RU_SUSPENDED_JOB
    add constraint ACT_FK_SJOB_EXECUTION
    foreign key (EXECUTION_ID_)
    references ACT_RU_EXECUTION (ID_);

create index ACT_IDX_SJOB_PROC_INST_ID on ACT_RU_SUSPENDED_JOB(PROCESS_INSTANCE_ID_);
alter table ACT_RU_SUSPENDED_JOB
    add constraint ACT_FK_SJOB_PROCESS_INSTANCE
    foreign key (PROCESS_INSTANCE_ID_)
    references ACT_RU_EXECUTION (ID_);

create index ACT_IDX_SJOB_PROC_DEF_ID on ACT_RU_SUSPENDED_JOB(PROC_DEF_ID_);
alter table ACT_RU_SUSPENDED_JOB
    add constraint ACT_FK_SJOB_PROC_DEF
    foreign key (PROC_DEF_ID_)
    references ACT_RE_PROCDEF (ID_);

create index ACT_IDX_DJOB_EXECUTION_ID on ACT_RU_DEADLETTER_JOB(EXECUTION_ID_);
alter table ACT_RU_DEADLETTER_JOB
    add constraint ACT_FK_DJOB_EXECUTION
    foreign key (EXECUTION_ID_)
    references ACT_RU_EXECUTION (ID_);

create index ACT_IDX_DJOB_PROC_INST_ID on ACT_RU_DEADLETTER_JOB(PROCESS_INSTANCE_ID_);
alter table ACT_RU_DEADLETTER_JOB
    add constraint ACT_FK_DJOB_PROCESS_INSTANCE
    foreign key (PROCESS_INSTANCE_ID_)
    references ACT_RU_EXECUTION (ID_);

create index ACT_IDX_DJOB_PROC_DEF_ID on ACT_RU_DEADLETTER_JOB(PROC_DEF_ID_);
alter table ACT_RU_DEADLETTER_JOB
    add constraint ACT_FK_DJOB_PROC_DEF
    foreign key (PROC_DEF_ID_)
    references ACT_RE_PROCDEF (ID_);

create index ACT_IDX_EVENT_SUBSCR on ACT_RU_EVENT_SUBSCR(EXECUTION_ID_);
alter table ACT_RU_EVENT_SUBSCR
    add constraint ACT_FK_EVENT_EXEC
    foreign key (EXECUTION_ID_)
    references ACT_RU_EXECUTION(ID_);

create index ACT_IDX_MODEL_SOURCE on ACT_RE_MODEL(EDITOR_SOURCE_VALUE_ID_);
alter table ACT_RE_MODEL
    add constraint ACT_FK_MODEL_SOURCE
    foreign key (EDITOR_SOURCE_VALUE_ID_)
    references ACT_GE_BYTEARRAY (ID_);

create index ACT_IDX_MODEL_SOURCE_EXTRA on ACT_RE_MODEL(EDITOR_SOURCE_EXTRA_VALUE_ID_);
alter table ACT_RE_MODEL
    add constraint ACT_FK_MODEL_SOURCE_EXTRA
    foreign key (EDITOR_SOURCE_EXTRA_VALUE_ID_)
    references ACT_GE_BYTEARRAY (ID_);

create index ACT_IDX_MODEL_DEPLOYMENT on ACT_RE_MODEL(DEPLOYMENT_ID_);
alter table ACT_RE_MODEL
    add constraint ACT_FK_MODEL_DEPLOYMENT
    foreign key (DEPLOYMENT_ID_)
    references ACT_RE_DEPLOYMENT (ID_);

create index ACT_IDX_PROCDEF_INFO_JSON on ACT_PROCDEF_INFO(INFO_JSON_ID_);
alter table ACT_PROCDEF_INFO
    add constraint ACT_FK_INFO_JSON_BA
    foreign key (INFO_JSON_ID_)
    references ACT_GE_BYTEARRAY (ID_);

create index ACT_IDX_PROCDEF_INFO_PROC on ACT_PROCDEF_INFO(PROC_DEF_ID_);
alter table ACT_PROCDEF_INFO
    add constraint ACT_FK_INFO_PROCDEF
    foreign key (PROC_DEF_ID_)
    references ACT_RE_PROCDEF (ID_);

alter table ACT_PROCDEF_INFO
    add constraint ACT_UNIQ_INFO_PROCDEF
    unique (PROC_DEF_ID_);

insert into ACT_GE_PROPERTY
values ('schema.version', '6.3.1.0', 1);

insert into ACT_GE_PROPERTY
values ('schema.history', 'create(6.3.1.0)', 1);

create table ACT_HI_IDENTITYLINK (
    ID_ NVARCHAR2(64),
    GROUP_ID_ NVARCHAR2(255),
    TYPE_ NVARCHAR2(255),
    USER_ID_ NVARCHAR2(255),
    TASK_ID_ NVARCHAR2(64),
    CREATE_TIME_ TIMESTAMP(6),
    PROC_INST_ID_ NVARCHAR2(64),
    SCOPE_ID_ NVARCHAR2(255),
    SCOPE_TYPE_ NVARCHAR2(255),
    SCOPE_DEFINITION_ID_ NVARCHAR2(255),
    primary key (ID_)
);

create index ACT_IDX_HI_IDENT_LNK_USER on ACT_HI_IDENTITYLINK(USER_ID_);
create index ACT_IDX_HI_IDENT_LNK_SCOPE on ACT_HI_IDENTITYLINK(SCOPE_ID_, SCOPE_TYPE_);
create index ACT_IDX_HI_IDENT_LNK_SCOPE_DEF on ACT_HI_IDENTITYLINK(SCOPE_DEFINITION_ID_, SCOPE_TYPE_);

create table ACT_HI_TASKINST (
    ID_ NVARCHAR2(64) not null,
    REV_ INTEGER default 1,
    PROC_DEF_ID_ NVARCHAR2(64),
    TASK_DEF_ID_ NVARCHAR2(64),
    TASK_DEF_KEY_ NVARCHAR2(255),
    PROC_INST_ID_ NVARCHAR2(64),
    EXECUTION_ID_ NVARCHAR2(64),
    SCOPE_ID_ NVARCHAR2(255),
    SUB_SCOPE_ID_ NVARCHAR2(255),
    SCOPE_TYPE_ NVARCHAR2(255),
    SCOPE_DEFINITION_ID_ NVARCHAR2(255),
    PARENT_TASK_ID_ NVARCHAR2(64),
    NAME_ NVARCHAR2(255),
    DESCRIPTION_ NVARCHAR2(2000),
    OWNER_ NVARCHAR2(255),
    ASSIGNEE_ NVARCHAR2(255),
    START_TIME_ TIMESTAMP(6) not null,
    CLAIM_TIME_ TIMESTAMP(6),
    END_TIME_ TIMESTAMP(6),
    DURATION_ NUMBER(19,0),
    DELETE_REASON_ NVARCHAR2(2000),
    PRIORITY_ INTEGER,
    DUE_DATE_ TIMESTAMP(6),
    FORM_KEY_ NVARCHAR2(255),
    CATEGORY_ NVARCHAR2(255),
    TENANT_ID_ NVARCHAR2(255) default '',
    LAST_UPDATED_TIME_ TIMESTAMP(6),
    primary key (ID_)
);

create index ACT_IDX_HI_TASK_SCOPE on ACT_HI_TASKINST(SCOPE_ID_, SCOPE_TYPE_);
create index ACT_IDX_HI_TASK_SUB_SCOPE on ACT_HI_TASKINST(SUB_SCOPE_ID_, SCOPE_TYPE_);
create index ACT_IDX_HI_TASK_SCOPE_DEF on ACT_HI_TASKINST(SCOPE_DEFINITION_ID_, SCOPE_TYPE_);
create table ACT_HI_VARINST (
    ID_ NVARCHAR2(64) not null,
    REV_ INTEGER default 1,
    PROC_INST_ID_ NVARCHAR2(64),
    EXECUTION_ID_ NVARCHAR2(64),
    TASK_ID_ NVARCHAR2(64),
    NAME_ NVARCHAR2(255) not null,
    VAR_TYPE_ NVARCHAR2(100),
    SCOPE_ID_ NVARCHAR2(255),
    SUB_SCOPE_ID_ NVARCHAR2(255),
    SCOPE_TYPE_ NVARCHAR2(255),
    BYTEARRAY_ID_ NVARCHAR2(64),
    DOUBLE_ NUMBER(*,10),
    LONG_ NUMBER(19,0),
    TEXT_ NVARCHAR2(2000),
    TEXT2_ NVARCHAR2(2000),
    CREATE_TIME_ TIMESTAMP(6),
    LAST_UPDATED_TIME_ TIMESTAMP(6),
    primary key (ID_)
);

create index ACT_IDX_HI_PROCVAR_NAME_TYPE on ACT_HI_VARINST(NAME_, VAR_TYPE_);
create index ACT_IDX_HI_VAR_SCOPE_ID_TYPE on ACT_HI_VARINST(SCOPE_ID_, SCOPE_TYPE_);
create index ACT_IDX_HI_VAR_SUB_ID_TYPE on ACT_HI_VARINST(SUB_SCOPE_ID_, SCOPE_TYPE_);

create table ACT_HI_PROCINST (
    ID_ NVARCHAR2(64) not null,
    REV_ INTEGER default 1,
    PROC_INST_ID_ NVARCHAR2(64) not null,
    BUSINESS_KEY_ NVARCHAR2(255),
    PROC_DEF_ID_ NVARCHAR2(64) not null,
    START_TIME_ TIMESTAMP(6) not null,
    END_TIME_ TIMESTAMP(6),
    DURATION_ NUMBER(19,0),
    START_USER_ID_ NVARCHAR2(255),
    START_ACT_ID_ NVARCHAR2(255),
    END_ACT_ID_ NVARCHAR2(255),
    SUPER_PROCESS_INSTANCE_ID_ NVARCHAR2(64),
    DELETE_REASON_ NVARCHAR2(2000),
    TENANT_ID_ NVARCHAR2(255) default '',
    NAME_ NVARCHAR2(255),
    CALLBACK_ID_ NVARCHAR2(255),
    CALLBACK_TYPE_ NVARCHAR2(255),
    primary key (ID_),
    unique (PROC_INST_ID_)
);

create table ACT_HI_ACTINST (
    ID_ NVARCHAR2(64) not null,
    REV_ INTEGER default 1,
    PROC_DEF_ID_ NVARCHAR2(64) not null,
    PROC_INST_ID_ NVARCHAR2(64) not null,
    EXECUTION_ID_ NVARCHAR2(64) not null,
    ACT_ID_ NVARCHAR2(255) not null,
    TASK_ID_ NVARCHAR2(64),
    CALL_PROC_INST_ID_ NVARCHAR2(64),
    ACT_NAME_ NVARCHAR2(255),
    ACT_TYPE_ NVARCHAR2(255) not null,
    ASSIGNEE_ NVARCHAR2(255),
    START_TIME_ TIMESTAMP(6) not null,
    END_TIME_ TIMESTAMP(6),
    DURATION_ NUMBER(19,0),
    DELETE_REASON_ NVARCHAR2(2000),
    TENANT_ID_ NVARCHAR2(255) default '',
    primary key (ID_)
);

create table ACT_HI_DETAIL (
    ID_ NVARCHAR2(64) not null,
    TYPE_ NVARCHAR2(255) not null,
    PROC_INST_ID_ NVARCHAR2(64),
    EXECUTION_ID_ NVARCHAR2(64),
    TASK_ID_ NVARCHAR2(64),
    ACT_INST_ID_ NVARCHAR2(64),
    NAME_ NVARCHAR2(255) not null,
    VAR_TYPE_ NVARCHAR2(64),
    REV_ INTEGER,
    TIME_ TIMESTAMP(6) not null,
    BYTEARRAY_ID_ NVARCHAR2(64),
    DOUBLE_ NUMBER(*,10),
    LONG_ NUMBER(19,0),
    TEXT_ NVARCHAR2(2000),
    TEXT2_ NVARCHAR2(2000),
    primary key (ID_)
);

create table ACT_HI_COMMENT (
    ID_ NVARCHAR2(64) not null,
    TYPE_ NVARCHAR2(255),
    TIME_ TIMESTAMP(6) not null,
    USER_ID_ NVARCHAR2(255),
    TASK_ID_ NVARCHAR2(64),
    PROC_INST_ID_ NVARCHAR2(64),
    ACTION_ NVARCHAR2(255),
    MESSAGE_ NVARCHAR2(2000),
    FULL_MSG_ BLOB,
    primary key (ID_)
);

create table ACT_HI_ATTACHMENT (
    ID_ NVARCHAR2(64) not null,
    REV_ INTEGER,
    USER_ID_ NVARCHAR2(255),
    NAME_ NVARCHAR2(255),
    DESCRIPTION_ NVARCHAR2(2000),
    TYPE_ NVARCHAR2(255),
    TASK_ID_ NVARCHAR2(64),
    PROC_INST_ID_ NVARCHAR2(64),
    URL_ NVARCHAR2(2000),
    CONTENT_ID_ NVARCHAR2(64),
    TIME_ TIMESTAMP(6),
    primary key (ID_)
);

create index ACT_IDX_HI_PRO_INST_END on ACT_HI_PROCINST(END_TIME_);
create index ACT_IDX_HI_PRO_I_BUSKEY on ACT_HI_PROCINST(BUSINESS_KEY_);
create index ACT_IDX_HI_ACT_INST_START on ACT_HI_ACTINST(START_TIME_);
create index ACT_IDX_HI_ACT_INST_END on ACT_HI_ACTINST(END_TIME_);
create index ACT_IDX_HI_DETAIL_PROC_INST on ACT_HI_DETAIL(PROC_INST_ID_);
create index ACT_IDX_HI_DETAIL_ACT_INST on ACT_HI_DETAIL(ACT_INST_ID_);
create index ACT_IDX_HI_DETAIL_TIME on ACT_HI_DETAIL(TIME_);
create index ACT_IDX_HI_DETAIL_NAME on ACT_HI_DETAIL(NAME_);
create index ACT_IDX_HI_DETAIL_TASK_ID on ACT_HI_DETAIL(TASK_ID_);
create index ACT_IDX_HI_PROCVAR_PROC_INST on ACT_HI_VARINST(PROC_INST_ID_);
create index ACT_IDX_HI_PROCVAR_TASK_ID on ACT_HI_VARINST(TASK_ID_);
create index ACT_IDX_HI_PROCVAR_EXE on ACT_HI_VARINST(EXECUTION_ID_);
create index ACT_IDX_HI_IDENT_LNK_TASK on ACT_HI_IDENTITYLINK(TASK_ID_);
create index ACT_IDX_HI_IDENT_LNK_PROCINST on ACT_HI_IDENTITYLINK(PROC_INST_ID_);

create index ACT_IDX_HI_ACT_INST_PROCINST on ACT_HI_ACTINST(PROC_INST_ID_, ACT_ID_);
create index ACT_IDX_HI_ACT_INST_EXEC on ACT_HI_ACTINST(EXECUTION_ID_, ACT_ID_);
create index ACT_IDX_HI_TASK_INST_PROCINST on ACT_HI_TASKINST(PROC_INST_ID_);


SET DEFINE OFF;

CREATE TABLE ACT_CMMN_DATABASECHANGELOG (ID VARCHAR2(255) NOT NULL, AUTHOR VARCHAR2(255) NOT NULL, FILENAME VARCHAR2(255) NOT NULL, DATEEXECUTED TIMESTAMP NOT NULL, ORDEREXECUTED INTEGER NOT NULL, EXECTYPE VARCHAR2(10) NOT NULL, MD5SUM VARCHAR2(35), DESCRIPTION VARCHAR2(255), COMMENTS VARCHAR2(255), TAG VARCHAR2(255), LIQUIBASE VARCHAR2(20), CONTEXTS VARCHAR2(255), LABELS VARCHAR2(255), DEPLOYMENT_ID VARCHAR2(10));

CREATE TABLE ACT_CMMN_DEPLOYMENT (ID_ VARCHAR2(255) NOT NULL, NAME_ VARCHAR2(255), CATEGORY_ VARCHAR2(255), KEY_ VARCHAR2(255), DEPLOY_TIME_ TIMESTAMP, PARENT_DEPLOYMENT_ID_ VARCHAR2(255), TENANT_ID_ VARCHAR2(255) DEFAULT '', CONSTRAINT PK_ACT_CMMN_DEPLOYMENT PRIMARY KEY (ID_));

CREATE TABLE ACT_CMMN_DEPLOYMENT_RESOURCE (ID_ VARCHAR2(255) NOT NULL, NAME_ VARCHAR2(255), DEPLOYMENT_ID_ VARCHAR2(255), RESOURCE_BYTES_ BLOB, CONSTRAINT PK_CMMN_DEPLOYMENT_RESOURCE PRIMARY KEY (ID_));

ALTER TABLE ACT_CMMN_DEPLOYMENT_RESOURCE ADD CONSTRAINT ACT_FK_CMMN_RSRC_DPL FOREIGN KEY (DEPLOYMENT_ID_) REFERENCES ACT_CMMN_DEPLOYMENT (ID_);

CREATE INDEX ACT_IDX_CMMN_RSRC_DPL ON ACT_CMMN_DEPLOYMENT_RESOURCE(DEPLOYMENT_ID_);

CREATE TABLE ACT_CMMN_CASEDEF (ID_ VARCHAR2(255) NOT NULL, REV_ INTEGER NOT NULL, NAME_ VARCHAR2(255), KEY_ VARCHAR2(255) NOT NULL, VERSION_ INTEGER NOT NULL, CATEGORY_ VARCHAR2(255), DEPLOYMENT_ID_ VARCHAR2(255), RESOURCE_NAME_ VARCHAR2(4000), DESCRIPTION_ VARCHAR2(4000), HAS_GRAPHICAL_NOTATION_ NUMBER(1), TENANT_ID_ VARCHAR2(255) DEFAULT '', CONSTRAINT PK_ACT_CMMN_CASEDEF PRIMARY KEY (ID_));

ALTER TABLE ACT_CMMN_CASEDEF ADD CONSTRAINT ACT_FK_CASE_DEF_DPLY FOREIGN KEY (DEPLOYMENT_ID_) REFERENCES ACT_CMMN_DEPLOYMENT (ID_);

CREATE INDEX ACT_IDX_CASE_DEF_DPLY ON ACT_CMMN_CASEDEF(DEPLOYMENT_ID_);

CREATE TABLE ACT_CMMN_RU_CASE_INST (ID_ VARCHAR2(255) NOT NULL, REV_ INTEGER NOT NULL, BUSINESS_KEY_ VARCHAR2(255), NAME_ VARCHAR2(255), PARENT_ID_ VARCHAR2(255), CASE_DEF_ID_ VARCHAR2(255), STATE_ VARCHAR2(255), START_TIME_ TIMESTAMP, START_USER_ID_ VARCHAR2(255), CALLBACK_ID_ VARCHAR2(255), CALLBACK_TYPE_ VARCHAR2(255), TENANT_ID_ VARCHAR2(255) DEFAULT '', CONSTRAINT PK_ACT_CMMN_RU_CASE_INST PRIMARY KEY (ID_));

ALTER TABLE ACT_CMMN_RU_CASE_INST ADD CONSTRAINT ACT_FK_CASE_INST_CASE_DEF FOREIGN KEY (CASE_DEF_ID_) REFERENCES ACT_CMMN_CASEDEF (ID_);

CREATE INDEX ACT_IDX_CASE_INST_CASE_DEF ON ACT_CMMN_RU_CASE_INST(CASE_DEF_ID_);

CREATE INDEX ACT_IDX_CASE_INST_PARENT ON ACT_CMMN_RU_CASE_INST(PARENT_ID_);

CREATE TABLE ACT_CMMN_RU_PLAN_ITEM_INST (ID_ VARCHAR2(255) NOT NULL, REV_ INTEGER NOT NULL, CASE_DEF_ID_ VARCHAR2(255), CASE_INST_ID_ VARCHAR2(255), STAGE_INST_ID_ VARCHAR2(255), IS_STAGE_ NUMBER(1), ELEMENT_ID_ VARCHAR2(255), NAME_ VARCHAR2(255), STATE_ VARCHAR2(255), START_TIME_ TIMESTAMP, START_USER_ID_ VARCHAR2(255), REFERENCE_ID_ VARCHAR2(255), REFERENCE_TYPE_ VARCHAR2(255), TENANT_ID_ VARCHAR2(255) DEFAULT '', CONSTRAINT PK_CMMN_PLAN_ITEM_INST PRIMARY KEY (ID_));

ALTER TABLE ACT_CMMN_RU_PLAN_ITEM_INST ADD CONSTRAINT ACT_FK_PLAN_ITEM_CASE_DEF FOREIGN KEY (CASE_DEF_ID_) REFERENCES ACT_CMMN_CASEDEF (ID_);

CREATE INDEX ACT_IDX_PLAN_ITEM_CASE_DEF ON ACT_CMMN_RU_PLAN_ITEM_INST(CASE_DEF_ID_);

ALTER TABLE ACT_CMMN_RU_PLAN_ITEM_INST ADD CONSTRAINT ACT_FK_PLAN_ITEM_CASE_INST FOREIGN KEY (CASE_INST_ID_) REFERENCES ACT_CMMN_RU_CASE_INST (ID_);

CREATE INDEX ACT_IDX_PLAN_ITEM_CASE_INST ON ACT_CMMN_RU_PLAN_ITEM_INST(CASE_INST_ID_);

CREATE TABLE ACT_CMMN_RU_SENTRY_PART_INST (ID_ VARCHAR2(255) NOT NULL, REV_ INTEGER NOT NULL, CASE_DEF_ID_ VARCHAR2(255), CASE_INST_ID_ VARCHAR2(255), PLAN_ITEM_INST_ID_ VARCHAR2(255), ON_PART_ID_ VARCHAR2(255), IF_PART_ID_ VARCHAR2(255), TIME_STAMP_ TIMESTAMP, CONSTRAINT PK_CMMN_SENTRY_PART_INST PRIMARY KEY (ID_));

ALTER TABLE ACT_CMMN_RU_SENTRY_PART_INST ADD CONSTRAINT ACT_FK_SENTRY_CASE_DEF FOREIGN KEY (CASE_DEF_ID_) REFERENCES ACT_CMMN_CASEDEF (ID_);

CREATE INDEX ACT_IDX_SENTRY_CASE_DEF ON ACT_CMMN_RU_SENTRY_PART_INST(CASE_DEF_ID_);

ALTER TABLE ACT_CMMN_RU_SENTRY_PART_INST ADD CONSTRAINT ACT_FK_SENTRY_CASE_INST FOREIGN KEY (CASE_INST_ID_) REFERENCES ACT_CMMN_RU_CASE_INST (ID_);

CREATE INDEX ACT_IDX_SENTRY_CASE_INST ON ACT_CMMN_RU_SENTRY_PART_INST(CASE_INST_ID_);

ALTER TABLE ACT_CMMN_RU_SENTRY_PART_INST ADD CONSTRAINT ACT_FK_SENTRY_PLAN_ITEM FOREIGN KEY (PLAN_ITEM_INST_ID_) REFERENCES ACT_CMMN_RU_PLAN_ITEM_INST (ID_);

CREATE INDEX ACT_IDX_SENTRY_PLAN_ITEM ON ACT_CMMN_RU_SENTRY_PART_INST(PLAN_ITEM_INST_ID_);

CREATE TABLE ACT_CMMN_RU_MIL_INST (ID_ VARCHAR2(255) NOT NULL, NAME_ VARCHAR2(255) NOT NULL, TIME_STAMP_ TIMESTAMP NOT NULL, CASE_INST_ID_ VARCHAR2(255) NOT NULL, CASE_DEF_ID_ VARCHAR2(255) NOT NULL, ELEMENT_ID_ VARCHAR2(255) NOT NULL, CONSTRAINT PK_ACT_CMMN_RU_MIL_INST PRIMARY KEY (ID_));

ALTER TABLE ACT_CMMN_RU_MIL_INST ADD CONSTRAINT ACT_FK_MIL_CASE_DEF FOREIGN KEY (CASE_DEF_ID_) REFERENCES ACT_CMMN_CASEDEF (ID_);

CREATE INDEX ACT_IDX_MIL_CASE_DEF ON ACT_CMMN_RU_MIL_INST(CASE_DEF_ID_);

ALTER TABLE ACT_CMMN_RU_MIL_INST ADD CONSTRAINT ACT_FK_MIL_CASE_INST FOREIGN KEY (CASE_INST_ID_) REFERENCES ACT_CMMN_RU_CASE_INST (ID_);

CREATE INDEX ACT_IDX_MIL_CASE_INST ON ACT_CMMN_RU_MIL_INST(CASE_INST_ID_);

CREATE TABLE ACT_CMMN_HI_CASE_INST (ID_ VARCHAR2(255) NOT NULL, REV_ INTEGER NOT NULL, BUSINESS_KEY_ VARCHAR2(255), NAME_ VARCHAR2(255), PARENT_ID_ VARCHAR2(255), CASE_DEF_ID_ VARCHAR2(255), STATE_ VARCHAR2(255), START_TIME_ TIMESTAMP, END_TIME_ TIMESTAMP, START_USER_ID_ VARCHAR2(255), CALLBACK_ID_ VARCHAR2(255), CALLBACK_TYPE_ VARCHAR2(255), TENANT_ID_ VARCHAR2(255) DEFAULT '', CONSTRAINT PK_ACT_CMMN_HI_CASE_INST PRIMARY KEY (ID_));

CREATE TABLE ACT_CMMN_HI_MIL_INST (ID_ VARCHAR2(255) NOT NULL, REV_ INTEGER NOT NULL, NAME_ VARCHAR2(255) NOT NULL, TIME_STAMP_ TIMESTAMP NOT NULL, CASE_INST_ID_ VARCHAR2(255) NOT NULL, CASE_DEF_ID_ VARCHAR2(255) NOT NULL, ELEMENT_ID_ VARCHAR2(255) NOT NULL, CONSTRAINT PK_ACT_CMMN_HI_MIL_INST PRIMARY KEY (ID_));

INSERT INTO ACT_CMMN_DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1', 'flowable', 'org/flowable/cmmn/db/liquibase/flowable-cmmn-db-changelog.xml', SYSTIMESTAMP, 1, '8:8b4b922d90b05ff27483abefc9597aa6', 'createTable tableName=ACT_CMMN_DEPLOYMENT; createTable tableName=ACT_CMMN_DEPLOYMENT_RESOURCE; addForeignKeyConstraint baseTableName=ACT_CMMN_DEPLOYMENT_RESOURCE, constraintName=ACT_FK_CMMN_RSRC_DPL, referencedTableName=ACT_CMMN_DEPLOYMENT; create...', '', 'EXECUTED', NULL, NULL, '3.6.1', '6986085896');

ALTER TABLE ACT_CMMN_CASEDEF ADD DGRM_RESOURCE_NAME_ VARCHAR2(4000);

ALTER TABLE ACT_CMMN_CASEDEF ADD HAS_START_FORM_KEY_ NUMBER(1);

ALTER TABLE ACT_CMMN_DEPLOYMENT_RESOURCE ADD GENERATED_ NUMBER(1);

ALTER TABLE ACT_CMMN_RU_CASE_INST ADD LOCK_TIME_ TIMESTAMP;

ALTER TABLE ACT_CMMN_RU_PLAN_ITEM_INST ADD ITEM_DEFINITION_ID_ VARCHAR2(255);

ALTER TABLE ACT_CMMN_RU_PLAN_ITEM_INST ADD ITEM_DEFINITION_TYPE_ VARCHAR2(255);

INSERT INTO ACT_CMMN_DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('2', 'flowable', 'org/flowable/cmmn/db/liquibase/flowable-cmmn-db-changelog.xml', SYSTIMESTAMP, 3, '8:65e39b3d385706bb261cbeffe7533cbe', 'addColumn tableName=ACT_CMMN_CASEDEF; addColumn tableName=ACT_CMMN_DEPLOYMENT_RESOURCE; addColumn tableName=ACT_CMMN_RU_CASE_INST; addColumn tableName=ACT_CMMN_RU_PLAN_ITEM_INST', '', 'EXECUTED', NULL, NULL, '3.6.1', '6986085896');

ALTER TABLE ACT_CMMN_RU_PLAN_ITEM_INST ADD IS_COMPLETEABLE_ NUMBER(1);

ALTER TABLE ACT_CMMN_RU_CASE_INST ADD IS_COMPLETEABLE_ NUMBER(1);

CREATE INDEX ACT_IDX_PLAN_ITEM_STAGE_INST ON ACT_CMMN_RU_PLAN_ITEM_INST(STAGE_INST_ID_);

ALTER TABLE ACT_CMMN_RU_PLAN_ITEM_INST ADD IS_COUNT_ENABLED_ NUMBER(1);

ALTER TABLE ACT_CMMN_RU_PLAN_ITEM_INST ADD VAR_COUNT_ INTEGER;

ALTER TABLE ACT_CMMN_RU_PLAN_ITEM_INST ADD SENTRY_PART_INST_COUNT_ INTEGER;

INSERT INTO ACT_CMMN_DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('3', 'flowable', 'org/flowable/cmmn/db/liquibase/flowable-cmmn-db-changelog.xml', SYSTIMESTAMP, 5, '8:c01f6e802b49436b4489040da3012359', 'addColumn tableName=ACT_CMMN_RU_PLAN_ITEM_INST; addColumn tableName=ACT_CMMN_RU_CASE_INST; createIndex indexName=ACT_IDX_PLAN_ITEM_STAGE_INST, tableName=ACT_CMMN_RU_PLAN_ITEM_INST; addColumn tableName=ACT_CMMN_RU_PLAN_ITEM_INST; addColumn tableNam...', '', 'EXECUTED', NULL, NULL, '3.6.1', '6986085896');

CREATE TABLE ACT_CMMN_HI_PLAN_ITEM_INST (ID_ VARCHAR2(255) NOT NULL, REV_ INTEGER NOT NULL, NAME_ VARCHAR2(255), STATE_ VARCHAR2(255), CASE_DEF_ID_ VARCHAR2(255), CASE_INST_ID_ VARCHAR2(255), STAGE_INST_ID_ VARCHAR2(255), IS_STAGE_ NUMBER(1), ELEMENT_ID_ VARCHAR2(255), ITEM_DEFINITION_ID_ VARCHAR2(255), ITEM_DEFINITION_TYPE_ VARCHAR2(255), CREATED_TIME_ TIMESTAMP, LAST_AVAILABLE_TIME_ TIMESTAMP, LAST_ENABLED_TIME_ TIMESTAMP, LAST_DISABLED_TIME_ TIMESTAMP, LAST_STARTED_TIME_ TIMESTAMP, LAST_SUSPENDED_TIME_ TIMESTAMP, COMPLETED_TIME_ TIMESTAMP, OCCURRED_TIME_ TIMESTAMP, TERMINATED_TIME_ TIMESTAMP, EXIT_TIME_ TIMESTAMP, ENDED_TIME_ TIMESTAMP, LAST_UPDATED_TIME_ TIMESTAMP, START_USER_ID_ VARCHAR2(255), REFERENCE_ID_ VARCHAR2(255), REFERENCE_TYPE_ VARCHAR2(255), TENANT_ID_ VARCHAR2(255) DEFAULT '', CONSTRAINT PK_ACT_CMMN_HI_PLAN_ITEM_INST PRIMARY KEY (ID_));

ALTER TABLE ACT_CMMN_RU_MIL_INST ADD TENANT_ID_ VARCHAR2(255) DEFAULT '';

ALTER TABLE ACT_CMMN_HI_MIL_INST ADD TENANT_ID_ VARCHAR2(255) DEFAULT '';

INSERT INTO ACT_CMMN_DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('4', 'flowable', 'org/flowable/cmmn/db/liquibase/flowable-cmmn-db-changelog.xml', SYSTIMESTAMP, 7, '8:e40d29cb79345b7fb5afd38a7f0ba8fc', 'createTable tableName=ACT_CMMN_HI_PLAN_ITEM_INST; addColumn tableName=ACT_CMMN_RU_MIL_INST; addColumn tableName=ACT_CMMN_HI_MIL_INST', '', 'EXECUTED', NULL, NULL, '3.6.1', '6986085896');



SET DEFINE OFF;

CREATE TABLE ACT_DMN_DATABASECHANGELOG (ID VARCHAR2(255) NOT NULL, AUTHOR VARCHAR2(255) NOT NULL, FILENAME VARCHAR2(255) NOT NULL, DATEEXECUTED TIMESTAMP NOT NULL, ORDEREXECUTED INTEGER NOT NULL, EXECTYPE VARCHAR2(10) NOT NULL, MD5SUM VARCHAR2(35), DESCRIPTION VARCHAR2(255), COMMENTS VARCHAR2(255), TAG VARCHAR2(255), LIQUIBASE VARCHAR2(20), CONTEXTS VARCHAR2(255), LABELS VARCHAR2(255), DEPLOYMENT_ID VARCHAR2(10));

CREATE TABLE ACT_DMN_DEPLOYMENT (ID_ VARCHAR2(255) NOT NULL, NAME_ VARCHAR2(255), CATEGORY_ VARCHAR2(255), DEPLOY_TIME_ TIMESTAMP, TENANT_ID_ VARCHAR2(255), PARENT_DEPLOYMENT_ID_ VARCHAR2(255), CONSTRAINT PK_ACT_DMN_DEPLOYMENT PRIMARY KEY (ID_));

CREATE TABLE ACT_DMN_DEPLOYMENT_RESOURCE (ID_ VARCHAR2(255) NOT NULL, NAME_ VARCHAR2(255), DEPLOYMENT_ID_ VARCHAR2(255), RESOURCE_BYTES_ BLOB, CONSTRAINT PK_ACT_DMN_DEPLOYMENT_RESOURCE PRIMARY KEY (ID_));

CREATE TABLE ACT_DMN_DECISION_TABLE (ID_ VARCHAR2(255) NOT NULL, NAME_ VARCHAR2(255), VERSION_ INTEGER, KEY_ VARCHAR2(255), CATEGORY_ VARCHAR2(255), DEPLOYMENT_ID_ VARCHAR2(255), PARENT_DEPLOYMENT_ID_ VARCHAR2(255), TENANT_ID_ VARCHAR2(255), RESOURCE_NAME_ VARCHAR2(255), DESCRIPTION_ VARCHAR2(255), CONSTRAINT PK_ACT_DMN_DECISION_TABLE PRIMARY KEY (ID_));

INSERT INTO ACT_DMN_DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1', 'activiti', 'org/flowable/dmn/db/liquibase/flowable-dmn-db-changelog.xml', SYSTIMESTAMP, 1, '8:c8701f1c71018b55029f450b2e9a10a1', 'createTable tableName=ACT_DMN_DEPLOYMENT; createTable tableName=ACT_DMN_DEPLOYMENT_RESOURCE; createTable tableName=ACT_DMN_DECISION_TABLE', '', 'EXECUTED', NULL, NULL, '3.6.1', '6986085978');

CREATE TABLE ACT_DMN_HI_DECISION_EXECUTION (ID_ VARCHAR2(255) NOT NULL, DECISION_DEFINITION_ID_ VARCHAR2(255), DEPLOYMENT_ID_ VARCHAR2(255), START_TIME_ TIMESTAMP, END_TIME_ TIMESTAMP, INSTANCE_ID_ VARCHAR2(255), EXECUTION_ID_ VARCHAR2(255), ACTIVITY_ID_ VARCHAR2(255), FAILED_ NUMBER(1) DEFAULT 0, TENANT_ID_ VARCHAR2(255), EXECUTION_JSON_ CLOB, CONSTRAINT PK_ACT_DMN_HI_DECISION_EXECUTI PRIMARY KEY (ID_));

INSERT INTO ACT_DMN_DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('2', 'flowable', 'org/flowable/dmn/db/liquibase/flowable-dmn-db-changelog.xml', SYSTIMESTAMP, 3, '8:47f94b27feb7df8a30d4e338c7bd5fb8', 'createTable tableName=ACT_DMN_HI_DECISION_EXECUTION', '', 'EXECUTED', NULL, NULL, '3.6.1', '6986085978');

ALTER TABLE ACT_DMN_HI_DECISION_EXECUTION ADD SCOPE_TYPE_ VARCHAR2(255);

INSERT INTO ACT_DMN_DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('3', 'flowable', 'org/flowable/dmn/db/liquibase/flowable-dmn-db-changelog.xml', SYSTIMESTAMP, 5, '8:ac17eae89fbdccb6e08daf3c7797b579', 'addColumn tableName=ACT_DMN_HI_DECISION_EXECUTION', '', 'EXECUTED', NULL, NULL, '3.6.1', '6986085978');

ALTER TABLE ACT_DMN_DECISION_TABLE DROP COLUMN PARENT_DEPLOYMENT_ID_;

INSERT INTO ACT_DMN_DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('4', 'flowable', 'org/flowable/dmn/db/liquibase/flowable-dmn-db-changelog.xml', SYSTIMESTAMP, 7, '8:f73aabc4529e7292c2942073d1cff6f9', 'dropColumn columnName=PARENT_DEPLOYMENT_ID_, tableName=ACT_DMN_DECISION_TABLE', '', 'EXECUTED', NULL, NULL, '3.6.1', '6986085978');



SET DEFINE OFF;

CREATE TABLE ACT_FO_DATABASECHANGELOG (ID VARCHAR2(255) NOT NULL, AUTHOR VARCHAR2(255) NOT NULL, FILENAME VARCHAR2(255) NOT NULL, DATEEXECUTED TIMESTAMP NOT NULL, ORDEREXECUTED INTEGER NOT NULL, EXECTYPE VARCHAR2(10) NOT NULL, MD5SUM VARCHAR2(35), DESCRIPTION VARCHAR2(255), COMMENTS VARCHAR2(255), TAG VARCHAR2(255), LIQUIBASE VARCHAR2(20), CONTEXTS VARCHAR2(255), LABELS VARCHAR2(255), DEPLOYMENT_ID VARCHAR2(10));

CREATE TABLE ACT_FO_FORM_DEPLOYMENT (ID_ VARCHAR2(255) NOT NULL, NAME_ VARCHAR2(255), CATEGORY_ VARCHAR2(255), DEPLOY_TIME_ TIMESTAMP, TENANT_ID_ VARCHAR2(255), PARENT_DEPLOYMENT_ID_ VARCHAR2(255), CONSTRAINT PK_ACT_FO_FORM_DEPLOYMENT PRIMARY KEY (ID_));

CREATE TABLE ACT_FO_FORM_RESOURCE (ID_ VARCHAR2(255) NOT NULL, NAME_ VARCHAR2(255), DEPLOYMENT_ID_ VARCHAR2(255), RESOURCE_BYTES_ BLOB, CONSTRAINT PK_ACT_FO_FORM_RESOURCE PRIMARY KEY (ID_));

CREATE TABLE ACT_FO_FORM_DEFINITION (ID_ VARCHAR2(255) NOT NULL, NAME_ VARCHAR2(255), VERSION_ INTEGER, KEY_ VARCHAR2(255), CATEGORY_ VARCHAR2(255), DEPLOYMENT_ID_ VARCHAR2(255), PARENT_DEPLOYMENT_ID_ VARCHAR2(255), TENANT_ID_ VARCHAR2(255), RESOURCE_NAME_ VARCHAR2(255), DESCRIPTION_ VARCHAR2(255), CONSTRAINT PK_ACT_FO_FORM_DEFINITION PRIMARY KEY (ID_));

CREATE TABLE ACT_FO_FORM_INSTANCE (ID_ VARCHAR2(255) NOT NULL, FORM_DEFINITION_ID_ VARCHAR2(255) NOT NULL, TASK_ID_ VARCHAR2(255), PROC_INST_ID_ VARCHAR2(255), PROC_DEF_ID_ VARCHAR2(255), SUBMITTED_DATE_ TIMESTAMP, SUBMITTED_BY_ VARCHAR2(255), FORM_VALUES_ID_ VARCHAR2(255), TENANT_ID_ VARCHAR2(255), CONSTRAINT PK_ACT_FO_FORM_INSTANCE PRIMARY KEY (ID_));

INSERT INTO ACT_FO_DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1', 'activiti', 'org/flowable/form/db/liquibase/flowable-form-db-changelog.xml', SYSTIMESTAMP, 1, '8:033ebf9380889aed7c453927ecc3250d', 'createTable tableName=ACT_FO_FORM_DEPLOYMENT; createTable tableName=ACT_FO_FORM_RESOURCE; createTable tableName=ACT_FO_FORM_DEFINITION; createTable tableName=ACT_FO_FORM_INSTANCE', '', 'EXECUTED', NULL, NULL, '3.6.1', '6986086020');

ALTER TABLE ACT_FO_FORM_INSTANCE ADD SCOPE_ID_ VARCHAR2(255);

ALTER TABLE ACT_FO_FORM_INSTANCE ADD SCOPE_TYPE_ VARCHAR2(255);

ALTER TABLE ACT_FO_FORM_INSTANCE ADD SCOPE_DEFINITION_ID_ VARCHAR2(255);

INSERT INTO ACT_FO_DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('2', 'flowable', 'org/flowable/form/db/liquibase/flowable-form-db-changelog.xml', SYSTIMESTAMP, 3, '8:986365ceb40445ce3b27a8e6b40f159b', 'addColumn tableName=ACT_FO_FORM_INSTANCE', '', 'EXECUTED', NULL, NULL, '3.6.1', '6986086020');

ALTER TABLE ACT_FO_FORM_DEFINITION DROP COLUMN PARENT_DEPLOYMENT_ID_;

INSERT INTO ACT_FO_DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('3', 'flowable', 'org/flowable/form/db/liquibase/flowable-form-db-changelog.xml', SYSTIMESTAMP, 5, '8:abf482518ceb09830ef674e52c06bf15', 'dropColumn columnName=PARENT_DEPLOYMENT_ID_, tableName=ACT_FO_FORM_DEFINITION', '', 'EXECUTED', NULL, NULL, '3.6.1', '6986086020');



SET DEFINE OFF;

CREATE TABLE ACT_CO_DATABASECHANGELOG (ID VARCHAR2(255) NOT NULL, AUTHOR VARCHAR2(255) NOT NULL, FILENAME VARCHAR2(255) NOT NULL, DATEEXECUTED TIMESTAMP NOT NULL, ORDEREXECUTED INTEGER NOT NULL, EXECTYPE VARCHAR2(10) NOT NULL, MD5SUM VARCHAR2(35), DESCRIPTION VARCHAR2(255), COMMENTS VARCHAR2(255), TAG VARCHAR2(255), LIQUIBASE VARCHAR2(20), CONTEXTS VARCHAR2(255), LABELS VARCHAR2(255), DEPLOYMENT_ID VARCHAR2(10));

CREATE TABLE ACT_CO_CONTENT_ITEM (ID_ VARCHAR2(255) NOT NULL, NAME_ VARCHAR2(255) NOT NULL, MIME_TYPE_ VARCHAR2(255), TASK_ID_ VARCHAR2(255), PROC_INST_ID_ VARCHAR2(255), CONTENT_STORE_ID_ VARCHAR2(255), CONTENT_STORE_NAME_ VARCHAR2(255), FIELD_ VARCHAR2(400), CONTENT_AVAILABLE_ NUMBER(1) DEFAULT 0, CREATED_ TIMESTAMP(6), CREATED_BY_ VARCHAR2(255), LAST_MODIFIED_ TIMESTAMP(6), LAST_MODIFIED_BY_ VARCHAR2(255), CONTENT_SIZE_ NUMBER(38, 0) DEFAULT 0, TENANT_ID_ VARCHAR2(255), CONSTRAINT PK_ACT_CO_CONTENT_ITEM PRIMARY KEY (ID_));

CREATE INDEX idx_contitem_taskid ON ACT_CO_CONTENT_ITEM(TASK_ID_);

CREATE INDEX idx_contitem_procid ON ACT_CO_CONTENT_ITEM(PROC_INST_ID_);

INSERT INTO ACT_CO_DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1', 'activiti', 'org/flowable/content/db/liquibase/flowable-content-db-changelog.xml', SYSTIMESTAMP, 1, '8:7644d7165cfe799200a2abdd3419e8b6', 'createTable tableName=ACT_CO_CONTENT_ITEM; createIndex indexName=idx_contitem_taskid, tableName=ACT_CO_CONTENT_ITEM; createIndex indexName=idx_contitem_procid, tableName=ACT_CO_CONTENT_ITEM', '', 'EXECUTED', NULL, NULL, '3.6.1', '6986086053');

ALTER TABLE ACT_CO_CONTENT_ITEM ADD SCOPE_ID_ VARCHAR2(255);

ALTER TABLE ACT_CO_CONTENT_ITEM ADD SCOPE_TYPE_ VARCHAR2(255);

CREATE INDEX idx_contitem_scope ON ACT_CO_CONTENT_ITEM(SCOPE_ID_, SCOPE_TYPE_);

INSERT INTO ACT_CO_DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('2', 'flowable', 'org/flowable/content/db/liquibase/flowable-content-db-changelog.xml', SYSTIMESTAMP, 3, '8:fe7b11ac7dbbf9c43006b23bbab60bab', 'addColumn tableName=ACT_CO_CONTENT_ITEM; createIndex indexName=idx_contitem_scope, tableName=ACT_CO_CONTENT_ITEM', '', 'EXECUTED', NULL, NULL, '3.6.1', '6986086053');


create table ACT_ID_PROPERTY (
    NAME_ NVARCHAR2(64),
    VALUE_ NVARCHAR2(300),
    REV_ INTEGER,
    primary key (NAME_)
);

insert into ACT_ID_PROPERTY
values ('schema.version', '6.3.1.0', 1);

create table ACT_ID_BYTEARRAY (
    ID_ NVARCHAR2(64),
    REV_ INTEGER,
    NAME_ NVARCHAR2(255),
    BYTES_ BLOB,
    primary key (ID_)
);

create table ACT_ID_GROUP (
    ID_ NVARCHAR2(64),
    REV_ INTEGER,
    NAME_ NVARCHAR2(255),
    TYPE_ NVARCHAR2(255),
    primary key (ID_)
);

create table ACT_ID_MEMBERSHIP (
    USER_ID_ NVARCHAR2(64),
    GROUP_ID_ NVARCHAR2(64),
    primary key (USER_ID_, GROUP_ID_)
);

create table ACT_ID_USER (
    ID_ NVARCHAR2(64),
    REV_ INTEGER,
    FIRST_ NVARCHAR2(255),
    LAST_ NVARCHAR2(255),
    EMAIL_ NVARCHAR2(255),
    PWD_ NVARCHAR2(255),
    PICTURE_ID_ NVARCHAR2(64),
    TENANT_ID_ NVARCHAR2(255) default '',
    primary key (ID_)
);

create table ACT_ID_INFO (
    ID_ NVARCHAR2(64),
    REV_ INTEGER,
    USER_ID_ NVARCHAR2(64),
    TYPE_ NVARCHAR2(64),
    KEY_ NVARCHAR2(255),
    VALUE_ NVARCHAR2(255),
    PASSWORD_ BLOB,
    PARENT_ID_ NVARCHAR2(255),
    primary key (ID_)
);

create table ACT_ID_TOKEN (
    ID_ NVARCHAR2(64) not null,
    REV_ INTEGER,
    TOKEN_VALUE_ NVARCHAR2(255),
    TOKEN_DATE_ TIMESTAMP(6),
    IP_ADDRESS_ NVARCHAR2(255),
    USER_AGENT_ NVARCHAR2(255),
    USER_ID_ NVARCHAR2(255),
    TOKEN_DATA_ NVARCHAR2(2000),
    primary key (ID_)
);

create table ACT_ID_PRIV (
    ID_ NVARCHAR2(64) not null,
    NAME_ NVARCHAR2(255) not null,
    primary key (ID_)
);

create table ACT_ID_PRIV_MAPPING (
    ID_ NVARCHAR2(64) not null,
    PRIV_ID_ NVARCHAR2(64) not null,
    USER_ID_ NVARCHAR2(255),
    GROUP_ID_ NVARCHAR2(255),
    primary key (ID_)
);

create index ACT_IDX_MEMB_GROUP on ACT_ID_MEMBERSHIP(GROUP_ID_);
alter table ACT_ID_MEMBERSHIP
    add constraint ACT_FK_MEMB_GROUP
    foreign key (GROUP_ID_)
    references ACT_ID_GROUP (ID_);

create index ACT_IDX_MEMB_USER on ACT_ID_MEMBERSHIP(USER_ID_);
alter table ACT_ID_MEMBERSHIP
    add constraint ACT_FK_MEMB_USER
    foreign key (USER_ID_)
    references ACT_ID_USER (ID_);

create index ACT_IDX_PRIV_MAPPING on ACT_ID_PRIV_MAPPING(PRIV_ID_);
alter table ACT_ID_PRIV_MAPPING
    add constraint ACT_FK_PRIV_MAPPING
    foreign key (PRIV_ID_)
    references ACT_ID_PRIV (ID_);

create index ACT_IDX_PRIV_USER on ACT_ID_PRIV_MAPPING(USER_ID_);
create index ACT_IDX_PRIV_GROUP on ACT_ID_PRIV_MAPPING(GROUP_ID_);

alter table ACT_ID_PRIV
    add constraint ACT_UNIQ_PRIV_NAME
    unique (NAME_);


SET DEFINE OFF;

CREATE TABLE ACT_APP_DATABASECHANGELOG (ID VARCHAR2(255) NOT NULL, AUTHOR VARCHAR2(255) NOT NULL, FILENAME VARCHAR2(255) NOT NULL, DATEEXECUTED TIMESTAMP NOT NULL, ORDEREXECUTED INTEGER NOT NULL, EXECTYPE VARCHAR2(10) NOT NULL, MD5SUM VARCHAR2(35), DESCRIPTION VARCHAR2(255), COMMENTS VARCHAR2(255), TAG VARCHAR2(255), LIQUIBASE VARCHAR2(20), CONTEXTS VARCHAR2(255), LABELS VARCHAR2(255), DEPLOYMENT_ID VARCHAR2(10));

CREATE TABLE ACT_APP_DEPLOYMENT (ID_ VARCHAR2(255) NOT NULL, NAME_ VARCHAR2(255), CATEGORY_ VARCHAR2(255), KEY_ VARCHAR2(255), DEPLOY_TIME_ TIMESTAMP, TENANT_ID_ VARCHAR2(255) DEFAULT '', CONSTRAINT PK_ACT_APP_DEPLOYMENT PRIMARY KEY (ID_));

CREATE TABLE ACT_APP_DEPLOYMENT_RESOURCE (ID_ VARCHAR2(255) NOT NULL, NAME_ VARCHAR2(255), DEPLOYMENT_ID_ VARCHAR2(255), RESOURCE_BYTES_ BLOB, CONSTRAINT PK_APP_DEPLOYMENT_RESOURCE PRIMARY KEY (ID_));

ALTER TABLE ACT_APP_DEPLOYMENT_RESOURCE ADD CONSTRAINT ACT_FK_APP_RSRC_DPL FOREIGN KEY (DEPLOYMENT_ID_) REFERENCES ACT_APP_DEPLOYMENT (ID_);

CREATE INDEX ACT_IDX_APP_RSRC_DPL ON ACT_APP_DEPLOYMENT_RESOURCE(DEPLOYMENT_ID_);

CREATE TABLE ACT_APP_APPDEF (ID_ VARCHAR2(255) NOT NULL, REV_ INTEGER NOT NULL, NAME_ VARCHAR2(255), KEY_ VARCHAR2(255) NOT NULL, VERSION_ INTEGER NOT NULL, CATEGORY_ VARCHAR2(255), DEPLOYMENT_ID_ VARCHAR2(255), RESOURCE_NAME_ VARCHAR2(4000), DESCRIPTION_ VARCHAR2(4000), TENANT_ID_ VARCHAR2(255) DEFAULT '', CONSTRAINT PK_ACT_APP_APPDEF PRIMARY KEY (ID_));

ALTER TABLE ACT_APP_APPDEF ADD CONSTRAINT ACT_FK_APP_DEF_DPLY FOREIGN KEY (DEPLOYMENT_ID_) REFERENCES ACT_APP_DEPLOYMENT (ID_);

CREATE INDEX ACT_IDX_APP_DEF_DPLY ON ACT_APP_APPDEF(DEPLOYMENT_ID_);

INSERT INTO ACT_APP_DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1', 'flowable', 'org/flowable/app/db/liquibase/flowable-app-db-changelog.xml', SYSTIMESTAMP, 1, '8:496fc778bdf2ab13f2e1926d0e63e0a2', 'createTable tableName=ACT_APP_DEPLOYMENT; createTable tableName=ACT_APP_DEPLOYMENT_RESOURCE; addForeignKeyConstraint baseTableName=ACT_APP_DEPLOYMENT_RESOURCE, constraintName=ACT_FK_APP_RSRC_DPL, referencedTableName=ACT_APP_DEPLOYMENT; createIndex...', '', 'EXECUTED', NULL, NULL, '3.6.1', '6986086090');


