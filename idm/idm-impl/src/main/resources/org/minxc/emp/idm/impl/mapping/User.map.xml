<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dstz.org.core.dao.UserDao">
    <resultMap id="User" type="com.dstz.org.core.model.User">
        <id property="id" column="id_" jdbcType="VARCHAR"/>
        <result property="fullname" column="fullname_" jdbcType="VARCHAR"/>
        <result property="account" column="account_" jdbcType="VARCHAR"/>
        <result property="password" column="password_" jdbcType="VARCHAR"/>
        <result property="email" column="email_" jdbcType="VARCHAR"/>
        <result property="mobile" column="mobile_" jdbcType="VARCHAR"/>
        <result property="weixin" column="weixin_" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time_" jdbcType="TIMESTAMP"/>
        <result property="address" column="address_" jdbcType="VARCHAR"/>
        <result property="photo" column="photo_" jdbcType="VARCHAR"/>
        <result property="sex" column="sex_" jdbcType="VARCHAR"/>
        <result property="from" column="from_" jdbcType="VARCHAR"/>
        <result property="status" column="status_" jdbcType="NUMERIC"/>
    </resultMap>

    <insert id="create" parameterType="com.dstz.org.core.model.User">
		INSERT INTO org_user
		(id_,fullname_,account_,password_,email_,mobile_,weixin_,create_time_,address_,photo_,sex_,from_,status_)
		VALUES 
		(#{id,jdbcType=VARCHAR}, #{fullname,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{weixin,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{address,jdbcType=VARCHAR}, #{photo,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{from,jdbcType=VARCHAR}, #{status,jdbcType=NUMERIC})
	</insert>

    <select id="get" parameterType="java.lang.String" resultMap="User">
		SELECT * FROM org_user 
		WHERE 
		id_=#{id}
	</select>

    <select id="getByAccount" parameterType="java.lang.String" resultMap="User">
		SELECT * FROM org_user 
		WHERE 
		account_=#{account}
	</select>

    <select id="query" parameterType="java.util.Map" resultMap="User">
        SELECT * FROM org_user
        <where>
            <if test="whereSql!=null">
                ${whereSql}
            </if>
        </where>
        <if test="orderBySql!=null">
            ORDER BY ${orderBySql}
        </if>
        <if test="orderBySql==null">
            ORDER BY id_ DESC
        </if>
    </select>

    <select id="getUserListByRelId" parameterType="java.util.Map" resultMap="User">
        SELECT org.id_ "group_id_", org.name_ "group_name_" ,org.code_ "group_code_",
        orguser.is_master_ "is_master_",orguser.rel_id_ "relId",orguser.id_ "orgUserId", u.*,rel.rel_name_ "relName"
        FROM org_user u inner JOIN org_group_user orguser on u.id_=orguser.user_id_
        inner join org_group org on org.id_=orguser.group_id_
        inner join org_group_rel rel ON orguser.rel_id_=rel.id_
         and orguser.rel_id_=#{relId}
    </select>

    <select id="getUserListByRole" parameterType="java.util.Map" resultMap="User">
        SELECT u.*,r.alias_ from org_user u inner JOIN org_user_role ur on u.id_=ur.user_id_
        inner join org_role r on ur.role_id_=r.id_
        <if test="roleId!=null">
            and ur.role_id_=#{roleId}
        </if>
        <if test="roleCode!=null">
            and r.alias_=#{roleCode}
        </if>
    </select>


    <!-- 组织用户-->
    <select id="queryOrgUser" parameterType="java.util.Map" resultMap="User">
        SELECT org.id_ "group_id_", org.name_ "org_name_" ,org.code_ "org_code_", u.*
        FROM org_user u inner JOIN (select DISTINCT group_id_,user_id_ from org_group_user) orguser on
        u.id_=orguser.user_id_
        inner join org_group org on org.id_=orguser.group_id_
        <if test="orgId!=null">
            and org.id_=#{groupId}
        </if>
        <where>
            <if test="whereSql!=null">
                ${whereSql}
            </if>
        </where>


        <if test="orderBySql!=null">
            ORDER BY ${orderBySql}
        </if>
        <if test="orderBySql==null">
            ORDER BY u.id_ DESC
        </if>
    </select>
    
    
     <select id="getUserListByOrgId" parameterType="java.util.Map" resultMap="User">
        SELECT org.id_ "group_id_", org.name_ "org_name_" ,org.code_ "org_code_", u.*
        FROM org_user u inner JOIN (select DISTINCT group_id_,user_id_ from org_group_user) orguser on
        u.id_=orguser.user_id_
        inner join org_group org on org.id_=orguser.group_id_
         and org.id_=#{groupId}
    </select>


    <update id="update" parameterType="com.dstz.org.core.model.User">
		UPDATE org_user SET
		fullname_=#{fullname,jdbcType=VARCHAR},
		account_=#{account,jdbcType=VARCHAR},
		password_=#{password,jdbcType=VARCHAR},
		email_=#{email,jdbcType=VARCHAR},
		mobile_=#{mobile,jdbcType=VARCHAR},
		weixin_=#{weixin,jdbcType=VARCHAR},
		create_time_=#{createTime,jdbcType=TIMESTAMP},
		address_=#{address,jdbcType=VARCHAR},
		photo_=#{photo,jdbcType=VARCHAR},
		sex_=#{sex,jdbcType=VARCHAR},
		from_=#{from,jdbcType=VARCHAR},
		status_=#{status,jdbcType=NUMERIC}
		WHERE
		id_=#{id}
	</update>

    <delete id="remove" parameterType="java.lang.String">
		DELETE FROM org_user 
		WHERE
		id_=#{id}
	</delete>


    <select id="isUserExist" resultType="java.lang.Integer">
        SELECT count(1) FROM org_user where account_=#{account}
        <if test="id!=null">
            and id_!=#{id}
        </if>
    </select>

    <select id="queryUserGroupRel" parameterType="java.util.Map" resultType="java.util.HashMap">
        SELECT orguser.id_ "groupUserId", org.id_ "orgId", org.name_ "orgName" ,org.code_ "orgCode",
        orguser.is_master_ "isMaster",rel.rel_name_ "relName" FROM org_group_user orguser
        join org_group org on org.id_=orguser.group_id_ LEFT JOIN org_group_rel rel ON orguser.rel_id_=rel.id_
        <where>
            <if test="whereSql!=null">
                ${whereSql}
            </if>
        </where>
        <if test="orderBySql!=null">
            ORDER BY ${orderBySql}
        </if>
        <if test="orderBySql==null">
            ORDER BY orguser.id_ DESC
        </if>
    </select>

</mapper>